{
  "swagger": "2.0",
  "info": {
    "title": "Dime.Scheduler",
    "description": "Dime.Scheduler is a resource and project planning solution that extends the capabilities of ERP, CRM and other business systems with powerful graphical scheduling tools.",
    "version": "2.0",
    "contact": {
      "name": "Dime.Scheduler Support",
      "url": "https://docs.dimescheduler.com",
      "email": "support@dimescheduler.com"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.dimescheduler.com"
    },
    {
      "propertyName": "Privacy Policy",
      "propertyValue": "https://www.dimescheduler.com/privacy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Business Management;Data"
    }
  ],
  "host": "api.dimescheduler.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/webhooks/AppointmentCreated": {
      "x-ms-notification-content": {
        "description": "Appointment details for webhook",
        "schema": {
          "$ref": "#/definitions/appointment-incoming"
        }
      },
      "post": {
        "responses": {
          "201": {
            "description": "Created."
          },
          "401": {
            "description": "Unauthenticated."
          },
          "403": {
            "description": "Access forbidden."
          },
          "429": {
            "description": "Resource exhausted. More than expected number of webhooks have been created."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "summary": "When an appointment is created",
        "description": "This trigger is used for listening to new appointments scheduled in Dime.Scheduler.",
        "operationId": "CreateAppointment",
        "x-ms-trigger": "single",
        "x-ms-trigger-hint": "To see this trigger work, create an appointment in Dime.Scheduler",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sourceApp": {
                  "type": "string",
                  "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
                  "title": "Source App",
                  "x-ms-visibility": "important"
                },
                "name": {
                  "type": "string",
                  "description": "Provide a descriptive name to identify the purpose of this flow in Dime.Scheduler.",
                  "title": "Name",
                  "x-ms-visibility": "important"
                },
                "notificationURL": {
                  "type": "string",
                  "description": "Notification URL where the appointment data will be posted.",
                  "title": "notificationURL",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true
                },
                "resource": {
                  "type": "string",
                  "description": "resource",
                  "title": "Resource",
                  "default": "Appointments",
                  "x-ms-visibility": "internal"
                },
                "changeType": {
                  "description": "Changes to listen on",
                  "x-ms-visibility": "internal",
                  "type": "array",
                  "default": [
                    "Create"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "notificationURL",
                "resource",
                "changeType",
                "sourceApp"
              ]
            }
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/webhooks/AppointmentCreated/{hook_id}": {
      "delete": {
        "summary": "Deletes the new appointment webhook",
        "description": "Deletes the new appointment webhook",
        "operationId": "DeleteCreateAppointmentTrigger",
        "x-ms-visibility": "internal",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "hook_id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "ID",
            "description": "Specify the ID of the WebHook"
          }
        ]
      }
    },
    "/webhooks/AppointmentUpdated": {
      "x-ms-notification-content": {
        "description": "Appointment details for webhook",
        "schema": {
          "$ref": "#/definitions/appointment-incoming"
        }
      },
      "post": {
        "responses": {
          "201": {
            "description": "Created."
          },
          "401": {
            "description": "Unauthenticated."
          },
          "403": {
            "description": "Access forbidden. "
          },
          "429": {
            "description": "Resource exhausted. More than expected number of webhooks have been created."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "summary": "When an appointment is updated",
        "description": "This trigger is used for listening to new appointments scheduled in Dime.Scheduler.",
        "operationId": "UpdateAppointment",
        "x-ms-trigger": "single",
        "x-ms-trigger-hint": "To see this trigger work, update an appointment in Dime.Scheduler",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sourceApp": {
                  "type": "string",
                  "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
                  "title": "Source App",
                  "x-ms-visibility": "important"
                },
                "notificationURL": {
                  "type": "string",
                  "description": "Notification URL where the appointment data will be posted.",
                  "title": "notificationURL",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true
                },
                "resource": {
                  "type": "string",
                  "description": "resource",
                  "title": "Resource",
                  "default": "Appointments",
                  "x-ms-visibility": "internal"
                },
                "changeType": {
                  "description": "Changes to listen on",
                  "x-ms-visibility": "internal",
                  "type": "array",
                  "default": [
                    "Update"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "notificationURL",
                "resource",
                "changeType",
                "sourceApp"
              ]
            }
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/webhooks/AppointmentUpdated/{hook_id}": {
      "delete": {
        "summary": "Deletes the new appointment webhook",
        "description": "Deletes the new appointment webhook",
        "operationId": "DeleteUpdateAppointmentTrigger",
        "x-ms-visibility": "internal",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "hook_id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "ID",
            "description": "Specify the ID of the WebHook"
          }
        ]
      }
    },
    "/webhooks/AppointmentDeleted": {
      "x-ms-notification-content": {
        "description": "Appointment details for webhook",
        "schema": {
          "$ref": "#/definitions/appointment-incoming"
        }
      },
      "post": {
        "responses": {
          "201": {
            "description": "Created."
          },
          "401": {
            "description": "Unauthenticated."
          },
          "403": {
            "description": "Access forbidden. "
          },
          "429": {
            "description": "Resource exhausted. More than expected number of webhooks have been created."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "summary": "When an appointment is deleted",
        "description": "This trigger is used for listening to appointments that have been removed in Dime.Scheduler.",
        "operationId": "DeleteAppointment",
        "x-ms-trigger": "single",
        "x-ms-trigger-hint": "To see this trigger work, delete an appointment in Dime.Scheduler",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sourceApp": {
                  "type": "string",
                  "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
                  "title": "Source App",
                  "x-ms-visibility": "important"
                },
                "notificationURL": {
                  "type": "string",
                  "description": "Notification URL where the appointment data will be posted.",
                  "title": "notificationURL",
                  "x-ms-visibility": "internal",
                  "x-ms-notification-url": true
                },
                "resource": {
                  "type": "string",
                  "description": "resource",
                  "title": "Resource",
                  "default": "Appointments",
                  "x-ms-visibility": "internal"
                },
                "changeType": {
                  "description": "Changes to listen on",
                  "x-ms-visibility": "internal",
                  "type": "array",
                  "default": [
                    "Delete"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "sourceApp",
                "notificationURL",
                "resource",
                "changeType"
              ]
            }
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/webhooks/AppointmentDeleted/{hook_id}": {
      "delete": {
        "summary": "Deletes the new appointment webhook",
        "description": "Deletes the new appointment webhook",
        "operationId": "DeleteDeletedAppointmentTrigger",
        "x-ms-visibility": "internal",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "hook_id",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "ID",
            "description": "Specify the ID of the WebHook"
          }
        ]
      }
    },
    "/resourcetype": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Response to successful retrieval resource types",
            "x-ms-summary": "Success response",
            "schema": {
              "$ref": "#/definitions/resourcetypelist"
            }
          },
          "401": {
            "description": "Unauthenticated."
          },
          "403": {
            "description": "Access forbidden."
          },
          "429": {
            "description": "Resource exhausted. More than expected number of webhooks have been created."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Gets the list of available resource types in Dime.Scheduler",
        "description": "Fetches the list of resource types",
        "operationId": "GetResourceTypes"
      }
    },
    "/categories": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Response to successful retrieval categories",
            "x-ms-summary": "Success response",
            "schema": {
              "$ref": "#/definitions/categorylist"
            }
          },
          "401": {
            "description": "Unauthenticated."
          },
          "403": {
            "description": "Access forbidden."
          },
          "429": {
            "description": "Resource exhausted. More than expected number of webhooks have been created."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Gets the list of available categories in Dime.Scheduler",
        "description": "Fetches the list of categories",
        "operationId": "GetCategories"
      },
      "post": {
        "summary": "Add or update a category",
        "description": "Add or update a category, which is the visual indicator that renders the background of the appointment.",
        "operationId": "categoryUpsert",
        "tags": [
          "indicator"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/category"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Remove a category",
        "description": "Remove a category, which is the visual indicator that renders the background of the appointment.",
        "operationId": "categoryDelete",
        "tags": [
          "indicator"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/category"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/timeMarker": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Response to successful retrieval time markers",
            "x-ms-summary": "Success response",
            "schema": {
              "$ref": "#/definitions/timemarkerlist"
            }
          },
          "401": {
            "description": "Unauthenticated."
          },
          "403": {
            "description": "Access forbidden."
          },
          "429": {
            "description": "Resource exhausted. More than expected number of webhooks have been created."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Gets the list of available time markers in Dime.Scheduler",
        "description": "Fetches the list of time markers",
        "operationId": "GetTimeMarkers"
      },
      "post": {
        "summary": "Add or update a time marker",
        "description": "Add or update a time marker, which is the visual indicator that renders the underscore of the appointment.",
        "operationId": "Timemarker",
        "tags": [
          "indicator"
        ],
        "parameters": [
          {
            "name": "timeMarkerUpsert",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/timeMarker"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Remove a time marker",
        "description": "Remove a time marker, which is the visual indicator that renders the underscore of the appointment.",
        "operationId": "timeMarkerDelete",
        "tags": [
          "indicator"
        ],
        "parameters": [
          {
            "name": "timeMarker",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/timeMarker"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/pin": {
      "post": {
        "summary": "Add or update a pin",
        "description": "Add or update a pin, which is the visual indicator that renders the colors of the markers on the map.",
        "operationId": "pinUpsert",
        "tags": [
          "indicator"
        ],
        "parameters": [
          {
            "name": "pin",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pin"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Remove a pin",
        "description": "Remove a pin, which is the visual indicator that renders the colors of the markers on the map.",
        "operationId": "pinDelete",
        "tags": [
          "indicator"
        ],
        "parameters": [
          {
            "name": "pin",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pin"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/resource": {
      "get": {
        "responses": {
          "200": {
            "description": "Response to successful retrieval resources",
            "x-ms-summary": "Success response",
            "schema": {
              "$ref": "#/definitions/resourcelist"
            }
          },
          "401": {
            "description": "Unauthenticated."
          },
          "403": {
            "description": "Access forbidden."
          },
          "429": {
            "description": "Resource exhausted. More than expected number of webhooks have been created."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Gets the list of available resources in Dime.SCheduler",
        "description": "Fetches the list of resources",
        "operationId": "GetResources"
      },
      "post": {
        "summary": "Add or update a resource",
        "description": "Add or update a resource.",
        "operationId": "resourceUpsert",
        "tags": [
          "resource"
        ],
        "parameters": [
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resource"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Remove a resource",
        "description": "Remove a resource.",
        "operationId": "resourceDelete",
        "tags": [
          "resource"
        ],
        "parameters": [
          {
            "name": "resource",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/resource"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/actionUri": {
      "post": {
        "summary": "Add or update an action link",
        "description": "Add or update an action link.",
        "operationId": "actionUriUpsert",
        "parameters": [
          {
            "name": "actionUri",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/actionUri"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Remove an action link",
        "description": "Remove an action link.",
        "operationId": "actionUriDelete",
        "parameters": [
          {
            "name": "actionUri",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/actionUri"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/appointment": {
      "post": {
        "summary": "Add an appointment",
        "description": "Add an appointment.",
        "operationId": "appointmentUpsert",
        "tags": [
          "appointment"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/appointment-outgoing-new"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "put": {
        "summary": "Update an appointment",
        "description": "Update an appointment.",
        "operationId": "appointmentUpdate",
        "tags": [
          "appointment"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/appointment-outgoing"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Remove an appointment",
        "description": "Remove an appointment.",
        "operationId": "appointmentDelete",
        "tags": [
          "appointment"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/appointment-outgoing"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/appointmentCategory": {
      "post": {
        "summary": "Set the category of an appointment",
        "description": "Set the category of an appointment.",
        "operationId": "appointmentCategoryUpsert",
        "tags": [
          "appointment"
        ],
        "parameters": [
          {
            "name": "appointmentCategory",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/appointmentCategory"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/appointmentContainer": {
      "post": {
        "summary": "Add or update an appointment container",
        "description": "Add or update an appointment container.",
        "operationId": "appointmentContainerUpsert",
        "tags": [
          "appointment"
        ],
        "parameters": [
          {
            "name": "appointmentContainer",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/appointmentContainer"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Remove an appointment container",
        "description": "Remove an appointment container.",
        "operationId": "appointmentContainerDelete",
        "tags": [
          "appointment"
        ],
        "parameters": [
          {
            "name": "appointmentContainer",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/appointmentContainer"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/appointmentContent": {
      "post": {
        "summary": "Set the content of the appointment",
        "description": "Set the content of the appointment.",
        "operationId": "appointmentContentUpsert",
        "tags": [
          "appointment"
        ],
        "parameters": [
          {
            "name": "appointmentContent",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/appointmentContent"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/appointmentImportance": {
      "post": {
        "summary": "Set the priority of an appointment",
        "description": "Set the priority of an appointment.",
        "operationId": "appointmentImportanceUpsert",
        "tags": [
          "appointment"
        ],
        "parameters": [
          {
            "name": "appointmentImportance",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/appointmentImportance"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/appointmentLocked": {
      "post": {
        "summary": "Set the appointment's locked status",
        "description": "Set the appointment's locked status.",
        "operationId": "appointmentLockedUpsert",
        "tags": [
          "appointment"
        ],
        "parameters": [
          {
            "name": "appointmentLocked",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/appointmentLocked"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/appointmentPlanningQuantity": {
      "post": {
        "summary": "Set the appointment's planning quantity",
        "description": "Set the appointment's planning quantity.",
        "operationId": "appointmentPlanningQuantityUpsert",
        "tags": [
          "appointment"
        ],
        "parameters": [
          {
            "name": "appointmentPlanningQuantity",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/appointmentPlanningQuantity"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/appointmentTimeMarker": {
      "post": {
        "summary": "Set the time marker of an appointment",
        "description": "Set the time marker of an appointment",
        "operationId": "appointmentTimemarkerUpsert",
        "tags": [
          "appointment"
        ],
        "parameters": [
          {
            "name": "appointmentTimeMarker",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/appointmentTimeMarker"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/appointmentUri": {
      "post": {
        "summary": "Add or update an appointment link",
        "description": "Add or update an appointment link.",
        "operationId": "appointmentUriUpsert",
        "tags": [
          "appointment"
        ],
        "parameters": [
          {
            "name": "appointmentUri",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/appointmentUri"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Remove an appointment link",
        "description": "Remove an appointment link.",
        "operationId": "appointmentUriDelete",
        "tags": [
          "appointment"
        ],
        "parameters": [
          {
            "name": "appointmentUri",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/appointmentUri"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/assignment": {
      "post": {
        "summary": "Add or update an assignment",
        "description": "Add or update an assignment, which is the allocation of a resource to an appointment.",
        "operationId": "assignmentUpsert",
        "tags": [
          "appointment"
        ],
        "parameters": [
          {
            "name": "assignment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/assignment"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Remove an assignment",
        "description": "Remove an assignment, which is the allocation of a resource to an appointment.",
        "operationId": "assignmentDelete",
        "tags": [
          "appointment"
        ],
        "parameters": [
          {
            "name": "assignment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/assignment"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/caption": {
      "post": {
        "summary": "Add or update a caption",
        "description": "Add or update a caption.",
        "operationId": "captionUpsert",
        "parameters": [
          {
            "name": "caption",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/caption"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Remove a caption",
        "description": "Remove a caption.",
        "operationId": "captionDelete",
        "parameters": [
          {
            "name": "caption",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/caption"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/calendar": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Response to successful retrieval calendars",
            "x-ms-summary": "Success response",
            "schema": {
              "$ref": "#/definitions/calendarlist"
            }
          },
          "401": {
            "description": "Unauthenticated."
          },
          "403": {
            "description": "Access forbidden."
          },
          "429": {
            "description": "Resource exhausted. More than expected number of webhooks have been created."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Gets the list of available calendars in Dime.Scheduler",
        "description": "Fetches the list of calendars",
        "operationId": "GetCalendars"
      }
    },
    "/container": {
      "post": {
        "summary": "Add or update a container",
        "description": "Add or update a container.",
        "operationId": "containerUpsert",
        "parameters": [
          {
            "name": "container",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/container"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Remove a container",
        "description": "Remove a container.",
        "operationId": "containerDelete",
        "parameters": [
          {
            "name": "container",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/container"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/filterGroup": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Response to successful retrieval filter groups",
            "x-ms-summary": "Success response",
            "schema": {
              "$ref": "#/definitions/filtergrouplist"
            }
          },
          "401": {
            "description": "Unauthenticated."
          },
          "403": {
            "description": "Access forbidden."
          },
          "429": {
            "description": "Resource exhausted. More than expected number of webhooks have been created."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Gets the list of available filter groups in Dime.Scheduler",
        "description": "Fetches the list of filter groups",
        "operationId": "GetFilterGroups"
      },
      "post": {
        "summary": "Add or update a filter group",
        "description": "Add or update a filter group.",
        "operationId": "filterGroupUpsert",
        "tags": [
          "filters"
        ],
        "parameters": [
          {
            "name": "filterGroup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/filterGroup"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Remove a filter group",
        "description": "Remove a filter group.",
        "operationId": "filterGroupDelete",
        "tags": [
          "filters"
        ],
        "parameters": [
          {
            "name": "filterGroup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/filterGroup"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/filterValue": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Response to successful retrieval filter values",
            "x-ms-summary": "Success response",
            "schema": {
              "$ref": "#/definitions/filtervaluelist"
            }
          },
          "401": {
            "description": "Unauthenticated."
          },
          "403": {
            "description": "Access forbidden."
          },
          "429": {
            "description": "Resource exhausted. More than expected number of webhooks have been created."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "x-ms-visibility": "internal",
        "summary": "Gets the list of available filter values in Dime.Scheduler",
        "description": "Fetches the list of filter values",
        "operationId": "GetFilterValues"
      },
      "post": {
        "summary": "Add or update a filter value",
        "description": "Add or update a filter value.",
        "operationId": "filterValueUpsert",
        "tags": [
          "filters"
        ],
        "parameters": [
          {
            "name": "filterValue",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/filterValue"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Remove a filter value",
        "description": "Remove a filter value.",
        "operationId": "filterValueDelete",
        "tags": [
          "filters"
        ],
        "parameters": [
          {
            "name": "filterValue",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/filterValue"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/job": {
      "post": {
        "summary": "Add or update a job",
        "description": "Add or update a job.",
        "operationId": "jobUpsert",
        "tags": [
          "task"
        ],
        "parameters": [
          {
            "name": "job",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/job"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Remove a job",
        "description": "Remove a job.",
        "operationId": "jobDelete",
        "tags": [
          "task"
        ],
        "parameters": [
          {
            "name": "job",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/job-delete"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/notification": {
      "post": {
        "summary": "Add or update a notification",
        "description": "Add or update a notification.",
        "operationId": "notificationUpsert",
        "parameters": [
          {
            "name": "notification",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/notification"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Remove a notification",
        "description": "Remove a notification.",
        "operationId": "notificationDelete",
        "parameters": [
          {
            "name": "notification",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/notification"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/resourceCalendar": {
      "post": {
        "summary": "Add or update a calendar for a resource",
        "description": "Add or update a calendar for a resource.",
        "operationId": "resourceCalendarUpsert",
        "tags": [
          "resource"
        ],
        "parameters": [
          {
            "name": "resourceCalendar",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resourceCalendar"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Remove a calendar for a resource",
        "description": "Remove a calendar for a resource.",
        "operationId": "resourceCalendarDelete",
        "tags": [
          "resource"
        ],
        "parameters": [
          {
            "name": "resourceCalendar",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resourceCalendar"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/resourceCapacity": {
      "post": {
        "summary": "Set the capacity of a resource",
        "description": "Set the capacity of a resource.",
        "operationId": "resourceCapacityUpsert",
        "tags": [
          "resource"
        ],
        "parameters": [
          {
            "name": "resourceCapacity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resourceCapacity"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Remove the capacity of a resource",
        "description": "Remove the capacity of a resource.",
        "operationId": "resourceCapacityDelete",
        "tags": [
          "resource"
        ],
        "parameters": [
          {
            "name": "resourceCapacity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resourceCapacity"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/resourceFilterValue": {
      "post": {
        "summary": "Set the filter value of a resource",
        "description": "Set the filter value of a resource.",
        "operationId": "resourceFilterValueUpsert",
        "tags": [
          "resource"
        ],
        "parameters": [
          {
            "name": "resourceFilterValue",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resourceFilterValue"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Remove the filter value of a resource",
        "description": "Remove the filter value of a resource.",
        "operationId": "resourceFilterValueDelete",
        "tags": [
          "resource"
        ],
        "parameters": [
          {
            "name": "resourceFilterValue",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resourceFilterValue"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/resourceGpsTracking": {
      "post": {
        "summary": "Set the live location of a resource",
        "description": "Set the live location of a resource.",
        "operationId": "resourceGpstrackingUpsert",
        "tags": [
          "resource"
        ],
        "parameters": [
          {
            "name": "resourceGpsTracking",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resourceGpsTracking"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Remove the live location of a resource",
        "description": "Remove the live location of a resource.",
        "operationId": "resourceGpstrackingDelete",
        "tags": [
          "resource"
        ],
        "parameters": [
          {
            "name": "resourceGpsTracking",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resourceGpsTracking"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/resourceUri": {
      "post": {
        "summary": "Set the uri of a resource",
        "description": "Set the uri of a resource.",
        "operationId": "resourceUriUpsert",
        "tags": [
          "resource"
        ],
        "parameters": [
          {
            "name": "resourceUri",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resourceUri"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Remove the uri of a resource",
        "description": "Remove the uri of a resource.",
        "operationId": "resourceUriDelete",
        "tags": [
          "resource"
        ],
        "parameters": [
          {
            "name": "resourceUri",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resourceUri"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/task": {
      "post": {
        "summary": "Add or update a task",
        "description": "Add or update a task.",
        "operationId": "taskUpsert",
        "tags": [
          "task"
        ],
        "parameters": [
          {
            "name": "task",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/task"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Remove a task",
        "description": "Remove a task.",
        "operationId": "taskDelete",
        "tags": [
          "task"
        ],
        "parameters": [
          {
            "name": "task",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/task-delete"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/taskContainer": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Add or update a task container",
        "description": "Add or update a task container.",
        "operationId": "taskContainerUpsert",
        "tags": [
          "task"
        ],
        "parameters": [
          {
            "name": "taskContainer",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taskContainer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Remove a task container",
        "description": "Remove a task container.",
        "operationId": "taskContainerDelete",
        "tags": [
          "task"
        ],
        "parameters": [
          {
            "name": "taskContainer",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taskContainer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/taskFilterValue": {
      "post": {
        "summary": "Add or update a task filter value",
        "description": "Add or update a task filter value.",
        "operationId": "taskFiltervalueUpsert",
        "tags": [
          "task"
        ],
        "parameters": [
          {
            "name": "taskFilterValue",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taskFilterValue"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      },
      "delete": {
        "summary": "Remove a task filter value",
        "description": "Remove a task filter value.",
        "operationId": "taskFiltervalueDelete",
        "tags": [
          "task"
        ],
        "parameters": [
          {
            "name": "taskFilterValue",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taskFilterValue"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    },
    "/taskLocked": {
      "post": {
        "summary": "Set the task's locked status",
        "description": "Set the task's locked status.",
        "operationId": "taskLockedUpsert",
        "tags": [
          "task"
        ],
        "parameters": [
          {
            "name": "taskLocked",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taskLocked"
            },
            "description": "JSON request body containing the contents of the requested entity to be imported."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/200"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "default": {
            "$ref": "#/responses/default"
          }
        }
      }
    }
  },
  "definitions": {
    "actionUri": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "description": "A discriminator that describes the type of entity that this record represents.",
          "maxLength": 10,
          "type": "string"
        },
        "uriType": {
          "x-ms-summary": "URI type",
          "format": "int32",
          "type": "integer",
          "x-ms-enum-values": [
            {
              "displayName": "Medium",
              "value": 0
            },
            {
              "displayName": "High",
              "value": 1
            },
            {
              "displayName": "Low",
              "value": 2
            }
          ],
          "enum": [
            0,
            1,
            2
          ]
        },
        "uri": {
          "x-ms-summary": "URI",
          "type": "string"
        },
        "description": {
          "x-ms-summary": "Description",
          "maxLength": 255,
          "type": "string"
        },
        "default": {
          "x-ms-summary": "Default",
          "type": "boolean"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "uriType": 0,
        "uri": "string",
        "description": "string",
        "default": true
      }
    },
    "appointment-outgoing": {
      "type": "object",
      "properties": {
        "appointmentId": {
          "x-ms-summary": "Appointment id",
          "format": "int64",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "appointmentGuid": {
          "x-ms-summary": "Appointment GUID",
          "format": "uuid",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "appointmentNo": {
          "x-ms-summary": "Appointment No",
          "type": "string"
        },
        "sourceApp": {
          "x-ms-summary": "Source application",
          "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "description": "A discriminator that describes the type of entity that this record represents.",
          "maxLength": 10,
          "type": "string"
        },
        "jobNo": {
          "x-ms-summary": "Job no.",
          "description": "The unique identifier that is associated with the job.",
          "maxLength": 50,
          "type": "string"
        },
        "taskNo": {
          "x-ms-summary": "Task no.",
          "description": "The unique identifier that is associated with the task.",
          "maxLength": 50,
          "type": "string"
        },
        "resourceNo": {
          "x-ms-summary": "Resource no.",
          "maxLength": 50,
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetResources",
            "value-path": "resourceNo",
            "value-title": "displayName"
          }
        },
        "subject": {
          "x-ms-summary": "Subject",
          "type": "string"
        },
        "body": {
          "x-ms-summary": "Body",
          "type": "string"
        },
        "start": {
          "x-ms-summary": "Start",
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "x-ms-summary": "End",
          "format": "date-time",
          "type": "string"
        },
        "timeMarkerId": {
          "type": "integer",
          "x-ms-summary": "Time Marker",
          "description": "Specifies the color of the horizontal bar at the bottom of the appointment in the planning board. Used to represent any kind of status or property that applies to your business.",
          "x-ms-dynamic-values": {
            "operationId": "GetTimeMarkers",
            "value-path": "id",
            "value-title": "name"
          }
        },
        "categoryId": {
          "type": "integer",
          "x-ms-summary": "Category",
          "description": "Specifies the background color of the appointment in the planning board. Used to represent any kind of status or property that applies to your business.",
          "x-ms-dynamic-values": {
            "operationId": "GetCategories",
            "value-path": "id",
            "value-title": "name"
          }
        },
        "importance": {
          "x-ms-summary": "Importance",
          "type": "integer",
          "default": 0,
          "x-ms-enum-values": [
            {
              "displayName": "Medium",
              "value": 0
            },
            {
              "displayName": "High",
              "value": 1
            },
            {
              "displayName": "Low",
              "value": 2
            }
          ],
          "enum": [
            0,
            1,
            2
          ]
        },
        "locked": {
          "x-ms-summary": "Locked",
          "type": "boolean"
        },
        "replaceResource": {
          "x-ms-summary": "Replace resource",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "backOfficeId": {
          "x-ms-summary": "Back office id",
          "maxLength": 100,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "backOfficeParentId": {
          "x-ms-summary": "Back office parent id",
          "maxLength": 100,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "unitOfMeasure": {
          "x-ms-summary": "Unit of measure",
          "maxLength": 20,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "unitOfMeasureConversion": {
          "x-ms-summary": "Unit of measure conversion",
          "format": "double",
          "type": "number",
          "x-ms-visibility": "advanced"
        },
        "planningQuantity": {
          "x-ms-summary": "Planning quantity",
          "format": "double",
          "type": "number",
          "x-ms-visibility": "advanced"
        },
        "useFixedPlanningQuantity": {
          "x-ms-summary": "Use fixed planning quantity",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "roundToUnitOfMeasure": {
          "x-ms-summary": "Round to unit of measure",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back office",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "appointment-outgoing-new": {
      "type": "object",
      "required": [
        "sourceApp",
        "sourceType",
        "jobNo",
        "taskNo",
        "resourceNo",
        "start",
        "end"
      ],
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "description": "A discriminator that describes the type of entity that this record represents.",
          "maxLength": 10,
          "type": "string"
        },
        "jobNo": {
          "x-ms-summary": "Job no.",
          "description": "The unique identifier that is associated with the job.",
          "maxLength": 50,
          "type": "string"
        },
        "taskNo": {
          "x-ms-summary": "Task no.",
          "description": "The unique identifier that is associated with the task.",
          "maxLength": 50,
          "type": "string"
        },
        "resourceNo": {
          "x-ms-summary": "Resource no.",
          "maxLength": 50,
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetResources",
            "value-path": "resourceNo",
            "value-title": "displayName"
          }
        },
        "subject": {
          "x-ms-summary": "Subject",
          "type": "string"
        },
        "body": {
          "x-ms-summary": "Body",
          "type": "string"
        },
        "start": {
          "x-ms-summary": "Start",
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "x-ms-summary": "End",
          "format": "date-time",
          "type": "string"
        },
        "timeMarkerId": {
          "type": "integer",
          "description": "Specifies the color of the horizontal bar at the bottom of the appointment in the planning board. Used to represent any kind of status or property that applies to your business.",
          "x-ms-summary": "Time Marker",
          "x-ms-dynamic-values": {
            "operationId": "GetTimeMarkers",
            "value-path": "id",
            "value-title": "name"
          }
        },
        "categoryId": {
          "type": "integer",
          "x-ms-summary": "Category",
          "description": "Specifies the background color of the appointment in the planning board. Used to represent any kind of status or property that applies to your business.",
          "x-ms-dynamic-values": {
            "operationId": "GetCategories",
            "value-path": "id",
            "value-title": "name"
          }
        },
        "importance": {
          "x-ms-summary": "Importance",
          "type": "integer",
          "default": 0,
          "x-ms-enum-values": [
            {
              "displayName": "Medium",
              "value": 0
            },
            {
              "displayName": "High",
              "value": 1
            },
            {
              "displayName": "Low",
              "value": 2
            }
          ],
          "enum": [
            0,
            1,
            2
          ]
        },
        "locked": {
          "x-ms-summary": "Locked",
          "type": "boolean"
        },
        "replaceResource": {
          "x-ms-summary": "Replace resource",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "backOfficeId": {
          "x-ms-summary": "Back office id",
          "maxLength": 100,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "backOfficeParentId": {
          "x-ms-summary": "Back office parent id",
          "maxLength": 100,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "unitOfMeasure": {
          "x-ms-summary": "Unit of measure",
          "maxLength": 20,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "unitOfMeasureConversion": {
          "x-ms-summary": "Unit of measure conversion",
          "format": "double",
          "type": "number",
          "x-ms-visibility": "advanced"
        },
        "planningQuantity": {
          "x-ms-summary": "Planning quantity",
          "format": "double",
          "type": "number",
          "x-ms-visibility": "advanced"
        },
        "useFixedPlanningQuantity": {
          "x-ms-summary": "Use fixed planning quantity",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "roundToUnitOfMeasure": {
          "x-ms-summary": "Round to unit of measure",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back office",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "appointment-incoming": {
      "type": "object",
      "properties": {
        "appointmentNo": {
          "x-ms-summary": "Appointment No",
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "ExternalId": {
          "type": "integer"
        },
        "Subject": {
          "type": "string"
        },
        "Body": {
          "type": "string"
        },
        "StartDate": {
          "type": "string",
          "format": "date-time",
          "title": "Start date"
        },
        "EndDate": {
          "type": "string",
          "format": "date-time",
          "title": "End date"
        },
        "Importance": {
          "type": "integer"
        },
        "AppointmentGuid": {
          "type": "string"
        },
        "Locked": {
          "type": "boolean"
        },
        "PlanningUOM": {
          "type": "string",
          "title": "Planning unit of measure"
        },
        "PlanningQty": {
          "format": "double",
          "type": "number",
          "title": "Planning quantity"
        },
        "UseFixPlanningQty": {
          "type": "boolean",
          "title": "Use fixed planning quantity"
        },
        "RoundToUOM": {
          "type": "boolean",
          "title": "Rount to unit of measure"
        },
        "LastModifiedDate": {
          "type": "string",
          "title": "Last modified date"
        },
        "LastModifiedUser": {
          "type": "string",
          "title": "Last modified user"
        },
        "IsRecurrenceException": {
          "type": "boolean",
          "title": "Is recurrence exception"
        },
        "CapacityIndicator": {
          "type": "boolean",
          "title": "Capacity indicator"
        },
        "AppointmentFieldValues": {
          "type": "array",
          "items": {}
        },
        "AppointmentUrls": {
          "type": "array",
          "items": {}
        },
        "AppointmentContainers": {
          "type": "array",
          "items": {}
        },
        "Notifications": {
          "type": "array",
          "items": {}
        },
        "CreatedDate": {
          "type": "string"
        },
        "CreatedUser": {
          "type": "string"
        },
        "Task": {
          "type": "object",
          "properties": {
            "TaskNo": {
              "type": "string",
              "title": "Task No"
            },
            "Job": {
              "type": "object",
              "properties": {
                "SourceApp": {
                  "type": "string",
                  "title": "Job source app"
                },
                "SourceType": {
                  "type": "string",
                  "title": "Job source type"
                },
                "JobNo": {
                  "type": "string",
                  "title": "Job No"
                }
              }
            }
          }
        },
        "Category": {
          "type": "object",
          "properties": {
            "DisplayName": {
              "type": "string",
              "title": "Category name"
            },
            "Color": {
              "type": "string",
              "title": "Category color"
            }
          }
        },
        "TimeMarker": {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "title": "Time marker name"
            },
            "Color": {
              "type": "string",
              "title": "Time marker color"
            }
          }
        },
        "Assignments": {
          "type": "array",
          "description": "The list of resources assigned to the appointment.",
          "items": {
            "type": "object",
            "properties": {
              "ResourceId": {
                "type": "integer",
                "x-ms-visibility": "internal"
              },
              "Resource": {
                "type": "object",
                "description": "The resource",
                "properties": {
                  "ResourceType": {
                    "type": "object",
                    "properties": {
                      "DisplayName": {
                        "type": "string"
                      }
                    }
                  },
                  "SourceApp": {
                    "type": "string",
                    "title": "Resource source app",
                    "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to."
                  },
                  "SourceType": {
                    "type": "string",
                    "title": "Resource source type",
                    "description": "A discriminator that describes the type of entity that this record represents."
                  },
                  "DisplayName": {
                    "type": "string",
                    "title": "Resource display name"
                  },
                  "Department": {
                    "type": "string",
                    "title": "Resource department"
                  },
                  "ResourceNo": {
                    "type": "string",
                    "title": "Resource Number"
                  },
                  "Email": {
                    "type": "string",
                    "title": "Resource email"
                  }
                }
              }
            }
          }
        }
      },
      "example": {
        "appointmentGuid": "04cd4567-1295-4226-86bd-5b1e99d7bab8",
        "sourceApp": "MYCRMAPP",
        "sourceType": "DEMO",
        "jobNo": "DS_DEMO",
        "taskNo": "DS_DEMO_15MIN",
        "resourceNo": "JOHNDOE",
        "subject": "Dime.Scheduler 15 minute introduction",
        "body": "Dime.Scheduler 15 minute introduction. Teams meeting.",
        "start": "2022-10-01T15:00:00Z",
        "end": "2022-10-01T15:15:00Z"
      }
    },
    "appointmentCategory": {
      "type": "object",
      "required": [
        "appointmentNo",
        "category"
      ],
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
          "maxLength": 30,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "description": "A discriminator that describes the type of entity that this record represents.",
          "maxLength": 10,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "appointmentId": {
          "x-ms-summary": "Appointment id",
          "format": "int64",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "appointmentNo": {
          "x-ms-summary": "Appointment No",
          "type": "string"
        },
        "category": {
          "x-ms-summary": "Category",
          "maxLength": 100,
          "type": "string",
          "description": "Specifies the background color of the appointment in the planning board. Used to represent any kind of status or property that applies to your business.",
          "x-ms-dynamic-values": {
            "operationId": "GetCategories",
            "value-path": "name",
            "value-title": "name"
          }
        },
        "appointmentGuid": {
          "x-ms-summary": "Appointment GUID",
          "format": "uuid",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back-office",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "category": "string",
        "appointmentGuid": "string"
      }
    },
    "appointmentContainer": {
      "type": "object",
      "required": [
        "appointment"
      ],
      "properties": {
        "container": {
          "x-ms-summary": "Container",
          "maxLength": 100,
          "type": "string"
        },
        "appointment": {
          "x-ms-summary": "Appointment",
          "maxLength": 100,
          "type": "string"
        }
      },
      "example": {
        "container": "string",
        "appointment": "string"
      }
    },
    "appointmentContent": {
      "type": "object",
      "required": [
        "appointmentNo"
      ],
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
          "maxLength": 30,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "description": "A discriminator that describes the type of entity that this record represents.",
          "maxLength": 10,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "appointmentId": {
          "x-ms-summary": "Appointment id",
          "format": "int64",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "appointmentNo": {
          "x-ms-summary": "Appointment No",
          "type": "string"
        },
        "appointmentGuid": {
          "x-ms-summary": "Appointment GUID",
          "format": "uuid",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back-office",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "subject": {
          "x-ms-summary": "Subject",
          "type": "string"
        },
        "body": {
          "x-ms-summary": "Body",
          "type": "string"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "appointmentGuid": "string",
        "subject": "string",
        "body": "string"
      }
    },
    "appointmentImportance": {
      "type": "object",
      "required": [
        "appointmentNo",
        "importance"
      ],
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
          "maxLength": 30,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "description": "A discriminator that describes the type of entity that this record represents.",
          "maxLength": 10,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "appointmentId": {
          "x-ms-summary": "Appointment id",
          "format": "int64",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "appointmentNo": {
          "x-ms-summary": "Appointment No",
          "type": "string"
        },
        "importance": {
          "x-ms-summary": "Importance",
          "format": "int32",
          "default": 0,
          "x-ms-enum-values": [
            {
              "displayName": "Medium",
              "value": 0
            },
            {
              "displayName": "High",
              "value": 1
            },
            {
              "displayName": "Low",
              "value": 2
            }
          ],
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "appointmentGuid": {
          "x-ms-summary": "Appointment GUID",
          "format": "uuid",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back-office",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "importance": 0,
        "appointmentGuid": "string"
      }
    },
    "appointmentLocked": {
      "type": "object",
      "required": [
        "appointmentNo",
        "locked"
      ],
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
          "maxLength": 30,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "description": "A discriminator that describes the type of entity that this record represents.",
          "maxLength": 10,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "appointmentId": {
          "x-ms-summary": "Appointment id",
          "format": "int64",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "appointmentNo": {
          "x-ms-summary": "Appointment No",
          "type": "string"
        },
        "locked": {
          "x-ms-summary": "Locked",
          "type": "boolean"
        },
        "appointmentGuid": {
          "x-ms-summary": "Appointment GUID",
          "format": "uuid",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back-office",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "locked": true,
        "appointmentGuid": "string"
      }
    },
    "appointmentPlanningQuantity": {
      "type": "object",
      "required": [
        "appointmentNo",
        "quantity"
      ],
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
          "maxLength": 30,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "description": "A discriminator that describes the type of entity that this record represents.",
          "maxLength": 10,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "appointmentId": {
          "x-ms-summary": "Appointment id",
          "format": "int64",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "appointmentNo": {
          "x-ms-summary": "Appointment No",
          "type": "string"
        },
        "quantity": {
          "x-ms-summary": "Quantity",
          "format": "double",
          "type": "number"
        },
        "appointmentGuid": {
          "x-ms-summary": "Appointment GUID",
          "format": "uuid",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back-office",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "quantity": 0,
        "appointmentGuid": "string"
      }
    },
    "appointmentTimeMarker": {
      "type": "object",
      "required": [
        "appointmentNo",
        "timeMarker"
      ],
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
          "maxLength": 30,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "description": "A discriminator that describes the type of entity that this record represents.",
          "maxLength": 10,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "appointmentId": {
          "x-ms-summary": "Appointment id",
          "format": "int64",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "appointmentNo": {
          "x-ms-summary": "Appointment No",
          "type": "string"
        },
        "timeMarker": {
          "x-ms-summary": "Time marker",
          "description": "Specifies the color of the horizontal bar at the bottom of the appointment in the planning board. Used to represent any kind of status or property that applies to your business.",
          "maxLength": 100,
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetTimeMarkers",
            "value-path": "name",
            "value-title": "name"
          }
        },
        "appointmentGuid": {
          "x-ms-summary": "Appointment GUID",
          "format": "uuid",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back-office",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "timeMarker": "string",
        "appointmentGuid": "string"
      }
    },
    "appointmentUri": {
      "type": "object",
      "required": [
        "appointmentNo",
        "uri",
        "description"
      ],
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "description": "A discriminator that describes the type of entity that this record represents.",
          "maxLength": 10,
          "type": "string"
        },
        "appointmentId": {
          "x-ms-summary": "Appointment id",
          "format": "int64",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "appointmentNo": {
          "x-ms-summary": "Appointment No",
          "type": "string"
        },
        "appointmentGuid": {
          "x-ms-summary": "Appointment GUID",
          "format": "uuid",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "uri": {
          "x-ms-summary": "URI",
          "maxLength": 1000,
          "type": "string"
        },
        "description": {
          "x-ms-summary": "Description",
          "maxLength": 255,
          "type": "string"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "appointmentGuid": "string",
        "uri": "string",
        "description": "string"
      }
    },
    "assignment": {
      "type": "object",
      "required": [
        "appointmentNo",
        "resourceNo"
      ],
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "description": "A discriminator that describes the type of entity that this record represents.",
          "maxLength": 10,
          "type": "string"
        },
        "appointmentId": {
          "x-ms-summary": "Appointment id",
          "format": "int64",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "appointmentNo": {
          "x-ms-summary": "Appointment No",
          "type": "string"
        },
        "appointmentGuid": {
          "x-ms-summary": "Appointment GUID",
          "format": "uuid",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "resourceNo": {
          "x-ms-summary": "Resource no.",
          "maxLength": 50,
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetResources",
            "value-path": "resourceNo",
            "value-title": "displayName"
          }
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back-office",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "appointmentGuid": "string",
        "resourceNo": "string"
      }
    },
    "calendarlist": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "x-ms-summary": "id",
            "maxLength": 100,
            "type": "integer"
          },
          "name": {
            "x-ms-summary": "name",
            "maxLength": 100,
            "type": "string"
          },
          "code": {
            "x-ms-summary": "Code",
            "maxLength": 100,
            "type": "string"
          }
        },
        "example": {}
      }
    },
    "caption": {
      "type": "object",
      "properties": {
        "context": {
          "x-ms-summary": "Context",
          "format": "int32",
          "type": "integer"
        },
        "sourceTable": {
          "x-ms-summary": "Source table",
          "maxLength": 255,
          "type": "string"
        },
        "fieldName": {
          "x-ms-summary": "Field name",
          "maxLength": 255,
          "type": "string"
        },
        "language": {
          "x-ms-summary": "Language",
          "maxLength": 10,
          "type": "string"
        },
        "text": {
          "x-ms-summary": "Text",
          "maxLength": 100,
          "type": "string"
        }
      },
      "example": {
        "context": 0,
        "sourceTable": "string",
        "fieldName": "string",
        "language": "string",
        "text": "string"
      }
    },
    "category": {
      "type": "object",
      "properties": {
        "name": {
          "x-ms-summary": "Name",
          "description": "Specifies the background color of the appointment in the planning board. Used to represent any kind of status or property that applies to your business.",
          "maxLength": 100,
          "type": "string"
        },
        "displayName": {
          "x-ms-summary": "Display name",
          "maxLength": 100,
          "type": "string"
        },
        "color": {
          "x-ms-summary": "Color",
          "maxLength": 7,
          "type": "string"
        }
      },
      "example": {
        "name": "OOO",
        "displayName": "Out of office",
        "color": "#6e62b5"
      }
    },
    "categorylist": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "x-ms-summary": "id",
            "maxLength": 100,
            "type": "string"
          },
          "name": {
            "x-ms-summary": "Name",
            "maxLength": 100,
            "type": "string"
          },
          "displayName": {
            "x-ms-summary": "Display name",
            "maxLength": 100,
            "type": "string"
          },
          "color": {
            "x-ms-summary": "Color",
            "maxLength": 7,
            "type": "string"
          }
        }
      },
      "example": {
        "name": "OOO",
        "displayName": "Out of office",
        "color": "#6e62b5"
      }
    },
    "container": {
      "type": "object",
      "properties": {
        "name": {
          "x-ms-summary": "Name",
          "maxLength": 100,
          "type": "string"
        },
        "handleDate": {
          "x-ms-summary": "Handle date",
          "format": "date-time",
          "type": "string"
        },
        "handleLocked": {
          "x-ms-summary": "Handle locked",
          "type": "boolean"
        }
      },
      "example": {
        "name": "Project Icarus",
        "handleDate": "2022-01-01T10:00",
        "handleLocked": true
      }
    },
    "filterGroup": {
      "type": "object",
      "properties": {
        "id": {
          "x-ms-summary": "Id",
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "internal"
        },
        "name": {
          "x-ms-summary": "Name",
          "maxLength": 50,
          "type": "string"
        },
        "columnNo": {
          "x-ms-summary": "Column no.",
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "dataFilter": {
          "x-ms-summary": "Date filter",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        }
      },
      "example": {
        "id": 0,
        "name": "Driver's license",
        "columnNo": 0,
        "dataFilter": true
      }
    },
    "filtergrouplist": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "x-ms-summary": "Id",
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "x-ms-summary": "Name",
            "maxLength": 50,
            "type": "string"
          },
          "columnNo": {
            "x-ms-summary": "Column no.",
            "format": "int32",
            "type": "integer"
          },
          "dataFilter": {
            "x-ms-summary": "Date filter",
            "type": "boolean"
          }
        }
      },
      "example": {
        "id": 0,
        "name": "Driver's license",
        "columnNo": 0,
        "dataFilter": true
      }
    },
    "filterValue": {
      "type": "object",
      "properties": {
        "group": {
          "x-ms-summary": "Group",
          "maxLength": 50,
          "type": "string"
        },
        "value": {
          "x-ms-summary": "Value",
          "maxLength": 100,
          "type": "string"
        }
      },
      "example": {
        "group": "Driver's license",
        "value": "Class B"
      }
    },
    "filtervaluelist": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "group": {
            "x-ms-summary": "Group",
            "maxLength": 50,
            "type": "string"
          },
          "value": {
            "x-ms-summary": "Value",
            "maxLength": 100,
            "type": "string"
          }
        },
        "example": {
          "group": "Driver's license",
          "value": "Class B"
        }
      }
    },
    "job": {
      "type": "object",
      "required": [
        "sourceApp",
        "sourceType",
        "jobNo",
        "shortDescription"
      ],
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "description": "A discriminator that describes the type of entity that this record represents.",
          "maxLength": 10,
          "type": "string"
        },
        "jobNo": {
          "x-ms-summary": "Job no.",
          "description": "The unique identifier that is associated with the job.",
          "maxLength": 50,
          "type": "string"
        },
        "shortDescription": {
          "x-ms-summary": "Short description",
          "maxLength": 50,
          "type": "string"
        },
        "description": {
          "x-ms-summary": "Description",
          "type": "string"
        },
        "type": {
          "x-ms-summary": "Type",
          "maxLength": 50,
          "type": "string"
        },
        "name": {
          "x-ms-summary": "Name",
          "maxLength": 255,
          "type": "string"
        },
        "timeMarker": {
          "type": "string",
          "x-ms-summary": "Time Marker",
          "description": "Specifies the color of the horizontal bar at the bottom of the appointment in the planning board. Used to represent any kind of status or property that applies to your business.",
          "x-ms-dynamic-values": {
            "operationId": "GetTimeMarkers",
            "value-path": "name",
            "value-title": "name"
          }
        },
        "category": {
          "type": "string",
          "x-ms-summary": "Category",
          "description": "Specifies the background color of the appointment in the planning board. Used to represent any kind of status or property that applies to your business.",
          "x-ms-dynamic-values": {
            "operationId": "GetCategories",
            "value-path": "name",
            "value-title": "name"
          }
        },
        "pin": {
          "x-ms-summary": "Pin",
          "maxLength": 100,
          "type": "string"
        },
        "customerNo": {
          "x-ms-summary": "Customer no.",
          "maxLength": 20,
          "type": "string"
        },
        "customerName": {
          "x-ms-summary": "Customer name",
          "maxLength": 50,
          "type": "string"
        },
        "customerAddress": {
          "x-ms-summary": "Customer address",
          "type": "string"
        },
        "customerAddressGeoLong": {
          "x-ms-summary": "Customer address longitude",
          "maxLength": 50,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "customerAddressGeoLat": {
          "x-ms-summary": "Customer address latitude",
          "maxLength": 50,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "customerPhone": {
          "x-ms-summary": "Customer phone",
          "maxLength": 50,
          "type": "string"
        },
        "customerEmail": {
          "x-ms-summary": "Customer e-mail",
          "maxLength": 50,
          "type": "string",
          "format": "email"
        },
        "contactNo": {
          "x-ms-summary": "Contact no.",
          "maxLength": 20,
          "type": "string"
        },
        "contactName": {
          "x-ms-summary": "Contact name",
          "maxLength": 50,
          "type": "string"
        },
        "contactAddress": {
          "x-ms-summary": "Contact address",
          "type": "string"
        },
        "contactAddressGeoLong": {
          "x-ms-summary": "Contact address longitude",
          "maxLength": 50,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "contactAddressGeoLat": {
          "x-ms-summary": "Contact address latitude",
          "maxLength": 50,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "contactPhone": {
          "x-ms-summary": "Contact phone",
          "maxLength": 50,
          "type": "string"
        },
        "contactEmail": {
          "x-ms-summary": "Contact e-mail",
          "maxLength": 50,
          "type": "string",
          "format": "email"
        },
        "siteNo": {
          "x-ms-summary": "Site no.",
          "maxLength": 20,
          "type": "string"
        },
        "siteName": {
          "x-ms-summary": "Site name",
          "maxLength": 50,
          "type": "string"
        },
        "siteAddress": {
          "x-ms-summary": "Site address",
          "type": "string"
        },
        "siteAddressGeoLong": {
          "x-ms-summary": "Site address longitude",
          "maxLength": 50,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "siteAddressGeoLat": {
          "x-ms-summary": "Site address latitude",
          "maxLength": 50,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "sitePhone": {
          "x-ms-summary": "Site phone",
          "maxLength": 50,
          "type": "string"
        },
        "siteEmail": {
          "x-ms-summary": "Site e-mail",
          "maxLength": 50,
          "type": "string",
          "format": "email"
        },
        "siteRegion": {
          "x-ms-summary": "Site region",
          "maxLength": 10,
          "type": "string"
        },
        "siteStreet": {
          "x-ms-summary": "Site street",
          "maxLength": 255,
          "type": "string"
        },
        "siteStreetNo": {
          "x-ms-summary": "Site street no.",
          "maxLength": 20,
          "type": "string"
        },
        "sitePostcode": {
          "x-ms-summary": "Site post code",
          "maxLength": 20,
          "type": "string"
        },
        "siteCity": {
          "x-ms-summary": "Site city",
          "maxLength": 50,
          "type": "string"
        },
        "siteCounty": {
          "x-ms-summary": "Site county",
          "maxLength": 50,
          "type": "string"
        },
        "siteState": {
          "x-ms-summary": "Site state",
          "maxLength": 50,
          "type": "string"
        },
        "siteCountry": {
          "x-ms-summary": "Site country",
          "maxLength": 50,
          "type": "string"
        },
        "siteFromNo": {
          "x-ms-summary": "Site from no.",
          "maxLength": 20,
          "type": "string"
        },
        "siteFromName": {
          "x-ms-summary": "Site from name",
          "maxLength": 50,
          "type": "string"
        },
        "siteFromAddress": {
          "x-ms-summary": "Site from address",
          "type": "string"
        },
        "siteFromAddressGeoLong": {
          "x-ms-summary": "Site from longitude",
          "maxLength": 50,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "siteFromAddressGeoLat": {
          "x-ms-summary": "Site from latitude",
          "maxLength": 50,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "siteFromPhone": {
          "x-ms-summary": "Site from phone",
          "maxLength": 50,
          "type": "string"
        },
        "siteFromEmail": {
          "x-ms-summary": "Site from e-mail",
          "maxLength": 50,
          "type": "string",
          "format": "email"
        },
        "siteFromRegion": {
          "x-ms-summary": "Site from region",
          "maxLength": 10,
          "type": "string"
        },
        "siteFromStreet": {
          "x-ms-summary": "Site from street",
          "maxLength": 255,
          "type": "string"
        },
        "siteFromStreetNo": {
          "x-ms-summary": "Site from street no.",
          "maxLength": 20,
          "type": "string"
        },
        "siteFromPostcode": {
          "x-ms-summary": "Site from post code",
          "maxLength": 20,
          "type": "string"
        },
        "siteFromCity": {
          "x-ms-summary": "Site from city",
          "maxLength": 50,
          "type": "string"
        },
        "siteFromCounty": {
          "x-ms-summary": "Site from county",
          "maxLength": 50,
          "type": "string"
        },
        "siteFromState": {
          "x-ms-summary": "Site from state",
          "maxLength": 50,
          "type": "string"
        },
        "siteFromCountry": {
          "x-ms-summary": "Site from country",
          "maxLength": 50,
          "type": "string"
        },
        "billNo": {
          "x-ms-summary": "Bill no.",
          "maxLength": 20,
          "type": "string"
        },
        "billName": {
          "x-ms-summary": "Bill name",
          "maxLength": 50,
          "type": "string"
        },
        "billAddress": {
          "x-ms-summary": "Bill address",
          "type": "string"
        },
        "billAddressGeoLong": {
          "x-ms-summary": "Bill address longitude",
          "maxLength": 50,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "billAddressGeoLat": {
          "x-ms-summary": "Bill address latitude",
          "maxLength": 50,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "billPhone": {
          "x-ms-summary": "Bill phone",
          "maxLength": 50,
          "type": "string"
        },
        "billEmail": {
          "x-ms-summary": "Bill e-mail",
          "maxLength": 50,
          "type": "string",
          "format": "email"
        },
        "billRegion": {
          "x-ms-summary": "Bill region",
          "maxLength": 10,
          "type": "string"
        },
        "importance": {
          "x-ms-summary": "Importance",
          "format": "int32",
          "default": 0,
          "x-ms-enum-values": [
            {
              "displayName": "Medium",
              "value": 0
            },
            {
              "displayName": "High",
              "value": 1
            },
            {
              "displayName": "Low",
              "value": 2
            }
          ],
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "creationDateTime": {
          "x-ms-summary": "Creation datetime",
          "format": "date-time",
          "type": "string"
        },
        "customerReference": {
          "x-ms-summary": "Customer reference",
          "maxLength": 50,
          "type": "string"
        },
        "language": {
          "x-ms-summary": "Language",
          "maxLength": 10,
          "type": "string"
        },
        "responsible": {
          "x-ms-summary": "Responsible",
          "maxLength": 50,
          "type": "string"
        },
        "creator": {
          "x-ms-summary": "Creator",
          "maxLength": 50,
          "type": "string"
        },
        "freeText1": {
          "x-ms-summary": "Free text field #1",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText2": {
          "x-ms-summary": "Free text field #2",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText3": {
          "x-ms-summary": "Free text field #3",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText4": {
          "x-ms-summary": "Free text field #4",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText5": {
          "x-ms-summary": "Free text field #5",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText6": {
          "x-ms-summary": "Free text field #6",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText7": {
          "x-ms-summary": "Free text field #7",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText8": {
          "x-ms-summary": "Free text field #8",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText9": {
          "x-ms-summary": "Free text field #9",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText10": {
          "x-ms-summary": "Free text field #10",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText11": {
          "x-ms-summary": "Free text field #11",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText12": {
          "x-ms-summary": "Free text field #12",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText13": {
          "x-ms-summary": "Free text field #13",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText14": {
          "x-ms-summary": "Free text field #14",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText15": {
          "x-ms-summary": "Free text field #15",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText16": {
          "x-ms-summary": "Free text field #16",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText17": {
          "x-ms-summary": "Free text field #17",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText18": {
          "x-ms-summary": "Free text field #18",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText19": {
          "x-ms-summary": "Free text field #19",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText20": {
          "x-ms-summary": "Free text field #20",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeDecimal1": {
          "x-ms-summary": "Free decimal field #1",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "double",
          "type": "number"
        },
        "freeDecimal2": {
          "x-ms-summary": "Free decimal field #2",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "double",
          "type": "number"
        },
        "freeDecimal3": {
          "x-ms-summary": "Free decimal field #3",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "double",
          "type": "number"
        },
        "freeDecimal4": {
          "x-ms-summary": "Free decimal field #4",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "double",
          "type": "number"
        },
        "freeDecimal5": {
          "x-ms-summary": "Free decimal field #5",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "double",
          "type": "number"
        },
        "freeDate1": {
          "x-ms-summary": "Free date field #1",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "date-time",
          "type": "string"
        },
        "freeDate2": {
          "x-ms-summary": "Free date field #2",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "date-time",
          "type": "string"
        },
        "freeDate3": {
          "x-ms-summary": "Free date field #3",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "date-time",
          "type": "string"
        },
        "freeDate4": {
          "x-ms-summary": "Free date field #4",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "date-time",
          "type": "string"
        },
        "freeDate5": {
          "x-ms-summary": "Free date field #5",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "date-time",
          "type": "string"
        },
        "freeBit1": {
          "x-ms-summary": "Free boolean field #1",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "type": "boolean"
        },
        "freeBit2": {
          "x-ms-summary": "Free boolean field #2",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "type": "boolean"
        },
        "freeBit3": {
          "x-ms-summary": "Free boolean field #3",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "type": "boolean"
        },
        "freeBit4": {
          "x-ms-summary": "Free boolean field #4",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "type": "boolean"
        },
        "freeBit5": {
          "x-ms-summary": "Free boolean field #5",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "type": "boolean"
        },
        "enableManualSelection": {
          "x-ms-summary": "Enable manual selection",
          "type": "boolean"
        },
        "availableInGantt": {
          "x-ms-summary": "Available in Gantt chart",
          "type": "boolean"
        },
        "startDate": {
          "x-ms-summary": "Start date",
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "x-ms-summary": "End date",
          "format": "date-time",
          "type": "string"
        },
        "allowDependencies": {
          "x-ms-summary": "Allow dependencies",
          "type": "boolean"
        },
        "note": {
          "x-ms-summary": "Note",
          "type": "string"
        },
        "overRuleGanttPlanning": {
          "x-ms-summary": "Overrule Gantt chart planning",
          "type": "boolean"
        },
        "checkAppointments": {
          "x-ms-summary": "Check appointments",
          "type": "boolean"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back-office",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "jobNo": "string",
        "shortDescription": "string",
        "description": "string",
        "type": "string",
        "name": "string",
        "category": "string",
        "timeMarker": "string",
        "pin": "string",
        "customerNo": "string",
        "customerName": "string",
        "customerAddress": "string",
        "customerAddressGeoLong": "string",
        "customerAddressGeoLat": "string",
        "customerPhone": "string",
        "customerEmail": "string",
        "contactNo": "string",
        "contactName": "string",
        "contactAddress": "string",
        "contactAddressGeoLong": "string",
        "contactAddressGeoLat": "string",
        "contactPhone": "string",
        "contactEmail": "string",
        "siteNo": "string",
        "siteName": "string",
        "siteAddress": "string",
        "siteAddressGeoLong": "string",
        "siteAddressGeoLat": "string",
        "sitePhone": "string",
        "siteEmail": "string",
        "siteRegion": "string",
        "siteStreet": "string",
        "siteStreetNo": "string",
        "sitePostcode": "string",
        "siteCity": "string",
        "siteCounty": "string",
        "siteState": "string",
        "siteCountry": "string",
        "siteFromNo": "string",
        "siteFromName": "string",
        "siteFromAddress": "string",
        "siteFromAddressGeoLong": "string",
        "siteFromAddressGeoLat": "string",
        "siteFromPhone": "string",
        "siteFromEmail": "string",
        "siteFromRegion": "string",
        "siteFromStreet": "string",
        "siteFromStreetNo": "string",
        "siteFromPostcode": "string",
        "siteFromCity": "string",
        "siteFromCounty": "string",
        "siteFromState": "string",
        "siteFromCountry": "string",
        "billNo": "string",
        "billName": "string",
        "billAddress": "string",
        "billAddressGeoLong": "string",
        "billAddressGeoLat": "string",
        "billPhone": "string",
        "billEmail": "string",
        "billRegion": "string",
        "importance": 0,
        "creationDateTime": "string",
        "customerReference": "string",
        "language": "string",
        "responsible": "string",
        "creator": "string",
        "freeText1": "string",
        "freeText2": "string",
        "freeText3": "string",
        "freeText4": "string",
        "freeText5": "string",
        "freeText6": "string",
        "freeText7": "string",
        "freeText8": "string",
        "freeText9": "string",
        "freeText10": "string",
        "freeText11": "string",
        "freeText12": "string",
        "freeText13": "string",
        "freeText14": "string",
        "freeText15": "string",
        "freeText16": "string",
        "freeText17": "string",
        "freeText18": "string",
        "freeText19": "string",
        "freeText20": "string",
        "freeDecimal1": 0,
        "freeDecimal2": 0,
        "freeDecimal3": 0,
        "freeDecimal4": 0,
        "freeDecimal5": 0,
        "freeDate1": "string",
        "freeDate2": "string",
        "freeDate3": "string",
        "freeDate4": "string",
        "freeDate5": "string",
        "freeBit1": true,
        "freeBit2": true,
        "freeBit3": true,
        "freeBit4": true,
        "freeBit5": true,
        "enableManualSelection": true,
        "availableInGantt": true,
        "startDate": "string",
        "endDate": "string",
        "allowDependencies": true,
        "note": "string",
        "overRuleGanttPlanning": true,
        "checkAppointments": true
      }
    },
    "job-delete": {
      "type": "object",
      "required": [
        "sourceApp",
        "sourceType",
        "jobNo"
      ],
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "description": "A discriminator that describes the type of entity that this record represents.",
          "maxLength": 10,
          "type": "string"
        },
        "jobNo": {
          "x-ms-summary": "Job no.",
          "description": "The unique identifier that is associated with the job.",
          "maxLength": 50,
          "type": "string"
        },
        "checkAppointments": {
          "x-ms-summary": "Check appointments",
          "type": "boolean"
        }
      }
    },
    "notification": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "description": "A discriminator that describes the type of entity that this record represents.",
          "maxLength": 10,
          "type": "string"
        },
        "appointmentId": {
          "x-ms-summary": "Appointment id",
          "format": "int64",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "jobNo": {
          "x-ms-summary": "Job no.",
          "maxLength": 50,
          "description": "Optional. Specify the job number to create a notification for all tasks and appointments that belong to this job.",
          "type": "string"
        },
        "taskNo": {
          "x-ms-summary": "Task no.",
          "maxLength": 50,
          "description": "Optional. Specify the task number to create a notification for all appointments that belong to this task.",
          "type": "string"
        },
        "appointmentNo": {
          "x-ms-summary": "Appointment No",
          "description": "Optional. Specify the appointment number to create a notification for this particular appointment.",
          "type": "string"
        },
        "type": {
          "x-ms-summary": "Type",
          "type": "integer",
          "format": "int32",
          "default": 0,
          "description": "Severity",
          "x-ms-enum-values": [
            {
              "displayName": "Info",
              "value": 0
            },
            {
              "displayName": "Warning",
              "value": 1
            },
            {
              "displayName": "Error",
              "value": 2
            }
          ],
          "enum": [
            0,
            1,
            2,
            3
          ]
        },
        "code": {
          "x-ms-summary": "Code",
          "maxLength": 20,
          "type": "string",
          "description": "The notification code."
        },
        "text": {
          "x-ms-summary": "Text",
          "type": "string",
          "description": "The notification message."
        },
        "date": {
          "x-ms-summary": "Date",
          "format": "date-time",
          "type": "string",
          "description": "Optional. The date stamp for this notificiation."
        },
        "appointmentGuid": {
          "x-ms-summary": "Appointment GUID",
          "format": "uuid",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back-office",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "connectorId": {
          "x-ms-summary": "Connector id",
          "maxLength": 50,
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "connectorId": "string",
        "type": 0,
        "code": "string",
        "text": "string",
        "date": "string",
        "jobNo": "string",
        "taskNo": "string",
        "appointmentGuid": "string"
      }
    },
    "pin": {
      "type": "object",
      "properties": {
        "name": {
          "x-ms-summary": "Name",
          "maxLength": 100,
          "type": "string"
        },
        "color": {
          "x-ms-summary": "Color",
          "maxLength": 7,
          "type": "string"
        }
      },
      "example": {
        "name": "Delivery trucks",
        "color": "#4a877c"
      }
    },
    "resource": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "description": "A discriminator that describes the type of entity that this record represents.",
          "maxLength": 10,
          "type": "string"
        },
        "resourceNo": {
          "x-ms-summary": "Resource no.",
          "description": "Text that uniquely identifies this resource.",
          "maxLength": 50,
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetResources",
            "value-path": "resourceNo",
            "value-title": "displayName"
          }
        },
        "resourceTypeId": {
          "x-ms-summary": "Resource type",
          "format": "int32",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetResourceTypes",
            "value-path": "id",
            "value-title": "displayName"
          }
        },
        "resourceName": {
          "x-ms-summary": "Resource name",
          "maxLength": 100,
          "type": "string"
        },
        "displayName": {
          "x-ms-summary": "Display name",
          "maxLength": 100,
          "type": "string"
        },
        "department": {
          "x-ms-summary": "Department",
          "maxLength": 50,
          "type": "string"
        },
        "email": {
          "x-ms-summary": "E-mail",
          "maxLength": 100,
          "type": "string",
          "format": "email"
        },
        "phone": {
          "x-ms-summary": "Phone",
          "maxLength": 50,
          "type": "string"
        },
        "mobilePhone": {
          "x-ms-summary": "Mobile phone",
          "maxLength": 50,
          "type": "string"
        },
        "replacementResource": {
          "x-ms-summary": "Replacement resource",
          "type": "boolean"
        },
        "fieldServiceEmail": {
          "x-ms-summary": "Field service e-mail",
          "maxLength": 100,
          "type": "string",
          "format": "email"
        },
        "personalEmail": {
          "x-ms-summary": "Person e-mail",
          "maxLength": 100,
          "type": "string",
          "format": "email"
        },
        "gpsTrackingResourceNo": {
          "x-ms-summary": "GPS tracking no.",
          "maxLength": 50,
          "type": "string"
        },
        "homeAddress": {
          "x-ms-summary": "Home address",
          "type": "string"
        },
        "homeAddressGeoLong": {
          "x-ms-summary": "Home address longitude",
          "format": "float",
          "type": "number",
          "x-ms-visibility": "advanced"
        },
        "homeAddressGeoLat": {
          "x-ms-summary": "Home address latitude",
          "format": "float",
          "type": "number",
          "x-ms-visibility": "advanced"
        },
        "homePhone": {
          "x-ms-summary": "Home phone",
          "maxLength": 50,
          "type": "string"
        },
        "homeEmail": {
          "x-ms-summary": "Home e-mail",
          "maxLength": 50,
          "type": "string",
          "format": "email"
        },
        "homeStreet": {
          "x-ms-summary": "Home street",
          "maxLength": 255,
          "type": "string"
        },
        "homeStreetNo": {
          "x-ms-summary": "Home street no.",
          "maxLength": 20,
          "type": "string"
        },
        "homePostcode": {
          "x-ms-summary": "Home post code",
          "maxLength": 20,
          "type": "string"
        },
        "homeCity": {
          "x-ms-summary": "Home city",
          "maxLength": 50,
          "type": "string"
        },
        "homeCounty": {
          "x-ms-summary": "Home county",
          "maxLength": 50,
          "type": "string"
        },
        "homeState": {
          "x-ms-summary": "Home state",
          "maxLength": 50,
          "type": "string"
        },
        "homeCountry": {
          "x-ms-summary": "Home country",
          "maxLength": 50,
          "type": "string"
        },
        "homeRegion": {
          "x-ms-summary": "Home region",
          "maxLength": 10,
          "type": "string"
        },
        "teamCode": {
          "x-ms-summary": "Team code",
          "maxLength": 20,
          "type": "string"
        },
        "teamName": {
          "x-ms-summary": "Team name",
          "maxLength": 100,
          "type": "string"
        },
        "teamType": {
          "x-ms-summary": "Team type",
          "maxLength": 20,
          "type": "string"
        },
        "teamSort": {
          "x-ms-summary": "Team sort",
          "format": "int32",
          "type": "integer"
        },
        "teamMemberType": {
          "x-ms-summary": "Team member type",
          "maxLength": 20,
          "type": "string"
        },
        "teamMemberSort": {
          "x-ms-summary": "Team member sort",
          "format": "int32",
          "type": "integer"
        },
        "doNotShow": {
          "x-ms-summary": "Do not show",
          "type": "boolean"
        },
        "exchangeIntegrationEnabled": {
          "x-ms-summary": "Enable exchange integration",
          "type": "boolean"
        },
        "resourceGpsTrackingEnabled": {
          "x-ms-summary": "Enable resource GPS tracking",
          "type": "boolean"
        },
        "inServiceFrom": {
          "x-ms-summary": "In service from",
          "format": "date-time",
          "type": "string"
        },
        "inServiceTill": {
          "x-ms-summary": "In service until",
          "format": "date-time",
          "type": "string"
        },
        "url1": {
          "x-ms-summary": "URL 1",
          "maxLength": 1000,
          "type": "string"
        },
        "urlDescription1": {
          "x-ms-summary": "URL description #1",
          "maxLength": 255,
          "type": "string"
        },
        "url2": {
          "x-ms-summary": "URL 2",
          "maxLength": 1000,
          "type": "string"
        },
        "urlDescription2": {
          "x-ms-summary": "URL description #2",
          "maxLength": 255,
          "type": "string"
        },
        "url3": {
          "x-ms-summary": "URL 3",
          "maxLength": 1000,
          "type": "string"
        },
        "urlDescription3": {
          "x-ms-summary": "URL description #3",
          "maxLength": 255,
          "type": "string"
        },
        "bulkPlanning": {
          "x-ms-summary": "Bulk planning",
          "type": "boolean"
        },
        "bulkCapacity": {
          "x-ms-summary": "Bulk capacity",
          "format": "double",
          "type": "number"
        },
        "pin": {
          "x-ms-summary": "The pin indicator",
          "maxLength": 100,
          "type": "string"
        },
        "freeText1": {
          "x-ms-summary": "Free text field #1",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText2": {
          "x-ms-summary": "Free text field #2",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText3": {
          "x-ms-summary": "Free text field #3",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText4": {
          "x-ms-summary": "Free text field #4",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText5": {
          "x-ms-summary": "Free text field #5",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText6": {
          "x-ms-summary": "Free text field #6",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText7": {
          "x-ms-summary": "Free text field #7",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText8": {
          "x-ms-summary": "Free text field #8",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText9": {
          "x-ms-summary": "Free text field #9",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText10": {
          "x-ms-summary": "Free text field #10",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText11": {
          "x-ms-summary": "Free text field #11",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText12": {
          "x-ms-summary": "Free text field #12",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText13": {
          "x-ms-summary": "Free text field #13",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText14": {
          "x-ms-summary": "Free text field #14",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText15": {
          "x-ms-summary": "Free text field #15",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText16": {
          "x-ms-summary": "Free text field #16",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText17": {
          "x-ms-summary": "Free text field #17",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText18": {
          "x-ms-summary": "Free text field #18",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText19": {
          "x-ms-summary": "Free text field #19",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText20": {
          "x-ms-summary": "Free text field #20",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeDecimal1": {
          "x-ms-summary": "Free decimal field #1",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "double",
          "type": "number"
        },
        "freeDecimal2": {
          "x-ms-summary": "Free decimal field #2",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "double",
          "type": "number"
        },
        "freeDecimal3": {
          "x-ms-summary": "Free decimal field #3",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "double",
          "type": "number"
        },
        "freeDecimal4": {
          "x-ms-summary": "Free decimal field #4",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "double",
          "type": "number"
        },
        "freeDecimal5": {
          "x-ms-summary": "Free decimal field #5",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "double",
          "type": "number"
        },
        "freeDate1": {
          "x-ms-summary": "Free decimal field #1",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "date-time",
          "type": "string"
        },
        "freeDate2": {
          "x-ms-summary": "Free decimal field #2",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "date-time",
          "type": "string"
        },
        "freeDate3": {
          "x-ms-summary": "Free decimal field #3",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "date-time",
          "type": "string"
        },
        "freeDate4": {
          "x-ms-summary": "Free decimal field #4",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "date-time",
          "type": "string"
        },
        "freeDate5": {
          "x-ms-summary": "Free decimal field #5",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "date-time",
          "type": "string"
        },
        "freeBit1": {
          "x-ms-summary": "Free boolean field #1",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "type": "boolean"
        },
        "freeBit2": {
          "x-ms-summary": "Free boolean field #2",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "type": "boolean"
        },
        "freeBit3": {
          "x-ms-summary": "Free boolean field #3",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "type": "boolean"
        },
        "freeBit4": {
          "x-ms-summary": "Free boolean field #4",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "type": "boolean"
        },
        "freeBit5": {
          "x-ms-summary": "Free boolean field #5",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "type": "boolean"
        }
      },
      "example": {
        "resourceNo": "string",
        "sourceApp": "string",
        "sourceType": "string",
        "resourceType": "string",
        "resourceTypeId": 0,
        "resourceName": "string",
        "displayName": "string",
        "department": "string",
        "email": "string",
        "phone": "string",
        "mobilePhone": "string",
        "replacementResource": true,
        "fieldServiceEmail": "string",
        "personalEmail": "string",
        "gpsTrackingResourceNo": "string",
        "homeAddress": "string",
        "homeAddressGeoLong": 0,
        "homeAddressGeoLat": 0,
        "homePhone": "string",
        "homeEmail": "string",
        "homeStreet": "string",
        "homeStreetNo": "string",
        "homePostcode": "string",
        "homeCity": "string",
        "homeCounty": "string",
        "homeState": "string",
        "homeCountry": "string",
        "homeRegion": "string",
        "teamCode": "string",
        "teamName": "string",
        "teamType": "string",
        "teamSort": 0,
        "teamMemberType": "string",
        "teamMemberSort": 0,
        "doNotShow": true,
        "inServiceFrom": "string",
        "inServiceTill": "string",
        "exchangeIntegrationEnabled": true,
        "url1": "string",
        "urlDescription1": "string",
        "url2": "string",
        "urlDescription2": "string",
        "url3": "string",
        "urlDescription3": "string",
        "bulkPlanning": true,
        "bulkCapacity": 0,
        "resourceGpsTrackingEnabled": true,
        "pin": "string",
        "freeText1": "string",
        "freeText2": "string",
        "freeText3": "string",
        "freeText4": "string",
        "freeText5": "string",
        "freeText6": "string",
        "freeText7": "string",
        "freeText8": "string",
        "freeText9": "string",
        "freeText10": "string",
        "freeText11": "string",
        "freeText12": "string",
        "freeText13": "string",
        "freeText14": "string",
        "freeText15": "string",
        "freeText16": "string",
        "freeText17": "string",
        "freeText18": "string",
        "freeText19": "string",
        "freeText20": "string",
        "freeDecimal1": 0,
        "freeDecimal2": 0,
        "freeDecimal3": 0,
        "freeDecimal4": 0,
        "freeDecimal5": 0,
        "freeDate1": "string",
        "freeDate2": "string",
        "freeDate3": "string",
        "freeDate4": "string",
        "freeDate5": "string",
        "freeBit1": true,
        "freeBit2": true,
        "freeBit3": true,
        "freeBit4": true,
        "freeBit5": true
      }
    },
    "resourcelist": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "x-ms-summary": "ID",
            "maxLength": 30,
            "type": "integer"
          },
          "sourceApp": {
            "x-ms-summary": "Source application",
            "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
            "maxLength": 30,
            "type": "string"
          },
          "sourceType": {
            "x-ms-summary": "Source type",
            "description": "A discriminator that describes the type of entity that this record represents.",
            "maxLength": 10,
            "type": "string"
          },
          "resourceNo": {
            "x-ms-summary": "Resource no.",
            "maxLength": 50,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetResources",
              "value-path": "resourceNo",
              "value-title": "displayName"
            }
          },
          "resourceTypeId": {
            "x-ms-summary": "Resource type",
            "description": "The resource type",
            "format": "int32",
            "type": "integer"
          },
          "resourceName": {
            "x-ms-summary": "Resource name",
            "maxLength": 100,
            "type": "string"
          },
          "displayName": {
            "x-ms-summary": "Display name",
            "maxLength": 100,
            "type": "string"
          },
          "department": {
            "x-ms-summary": "Department",
            "maxLength": 50,
            "type": "string"
          },
          "email": {
            "x-ms-summary": "E-mail",
            "maxLength": 100,
            "type": "string",
            "format": "email"
          },
          "phone": {
            "x-ms-summary": "Phone",
            "maxLength": 50,
            "type": "string"
          },
          "mobilePhone": {
            "x-ms-summary": "Mobile phone",
            "maxLength": 50,
            "type": "string"
          },
          "replacementResource": {
            "x-ms-summary": "Replacement resource",
            "type": "boolean"
          },
          "fieldServiceEmail": {
            "x-ms-summary": "Field service e-mail",
            "maxLength": 100,
            "type": "string",
            "format": "email"
          },
          "personalEmail": {
            "x-ms-summary": "Person e-mail",
            "maxLength": 100,
            "type": "string",
            "format": "email"
          },
          "gpsTrackingResourceNo": {
            "x-ms-summary": "GPS tracking no.",
            "maxLength": 50,
            "type": "string"
          },
          "homeAddress": {
            "x-ms-summary": "Home address",
            "type": "string"
          },
          "homeAddressGeoLong": {
            "x-ms-summary": "Home address longitude",
            "format": "float",
            "type": "number",
            "x-ms-visibility": "advanced"
          },
          "homeAddressGeoLat": {
            "x-ms-summary": "Home address latitude",
            "format": "float",
            "type": "number",
            "x-ms-visibility": "advanced"
          },
          "homePhone": {
            "x-ms-summary": "Home phone",
            "maxLength": 50,
            "type": "string"
          },
          "homeEmail": {
            "x-ms-summary": "Home e-mail",
            "maxLength": 50,
            "type": "string",
            "format": "email"
          },
          "homeStreet": {
            "x-ms-summary": "Home street",
            "maxLength": 255,
            "type": "string"
          },
          "homeStreetNo": {
            "x-ms-summary": "Home street no.",
            "maxLength": 20,
            "type": "string"
          },
          "homePostcode": {
            "x-ms-summary": "Home post code",
            "maxLength": 20,
            "type": "string"
          },
          "homeCity": {
            "x-ms-summary": "Home city",
            "maxLength": 50,
            "type": "string"
          },
          "homeCounty": {
            "x-ms-summary": "Home county",
            "maxLength": 50,
            "type": "string"
          },
          "homeState": {
            "x-ms-summary": "Home state",
            "maxLength": 50,
            "type": "string"
          },
          "homeCountry": {
            "x-ms-summary": "Home country",
            "maxLength": 50,
            "type": "string"
          },
          "homeRegion": {
            "x-ms-summary": "Home region",
            "maxLength": 10,
            "type": "string"
          },
          "teamCode": {
            "x-ms-summary": "Team code",
            "maxLength": 20,
            "type": "string"
          },
          "teamName": {
            "x-ms-summary": "Team name",
            "maxLength": 100,
            "type": "string"
          },
          "teamType": {
            "x-ms-summary": "Team type",
            "maxLength": 20,
            "type": "string"
          },
          "teamSort": {
            "x-ms-summary": "Team sort",
            "format": "int32",
            "type": "integer"
          },
          "teamMemberType": {
            "x-ms-summary": "Team member type",
            "maxLength": 20,
            "type": "string"
          },
          "teamMemberSort": {
            "x-ms-summary": "Team member sort",
            "format": "int32",
            "type": "integer"
          },
          "doNotShow": {
            "x-ms-summary": "Do not show",
            "type": "boolean"
          },
          "exchangeIntegrationEnabled": {
            "x-ms-summary": "Enable exchange integration",
            "type": "boolean"
          },
          "resourceGpsTrackingEnabled": {
            "x-ms-summary": "Enable resource GPS tracking",
            "type": "boolean"
          },
          "inServiceFrom": {
            "x-ms-summary": "In service from",
            "format": "date-time",
            "type": "string"
          },
          "inServiceTill": {
            "x-ms-summary": "In service until",
            "format": "date-time",
            "type": "string"
          },
          "url1": {
            "x-ms-summary": "URL 1",
            "maxLength": 1000,
            "type": "string"
          },
          "urlDescription1": {
            "x-ms-summary": "URL description #1",
            "maxLength": 255,
            "type": "string"
          },
          "url2": {
            "x-ms-summary": "URL 2",
            "maxLength": 1000,
            "type": "string"
          },
          "urlDescription2": {
            "x-ms-summary": "URL description #2",
            "maxLength": 255,
            "type": "string"
          },
          "url3": {
            "x-ms-summary": "URL 3",
            "maxLength": 1000,
            "type": "string"
          },
          "urlDescription3": {
            "x-ms-summary": "URL description #3",
            "maxLength": 255,
            "type": "string"
          },
          "bulkPlanning": {
            "x-ms-summary": "Bulk planning",
            "type": "boolean"
          },
          "bulkCapacity": {
            "x-ms-summary": "Bulk capacity",
            "format": "double",
            "type": "number"
          },
          "pin": {
            "x-ms-summary": "The pin indicator",
            "maxLength": 100,
            "type": "string"
          },
          "freeText1": {
            "x-ms-summary": "Free text field #1",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "maxLength": 100,
            "type": "string"
          },
          "freeText2": {
            "x-ms-summary": "Free text field #2",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "maxLength": 100,
            "type": "string"
          },
          "freeText3": {
            "x-ms-summary": "Free text field #3",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "maxLength": 100,
            "type": "string"
          },
          "freeText4": {
            "x-ms-summary": "Free text field #4",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "maxLength": 100,
            "type": "string"
          },
          "freeText5": {
            "x-ms-summary": "Free text field #5",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "maxLength": 100,
            "type": "string"
          },
          "freeText6": {
            "x-ms-summary": "Free text field #6",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "maxLength": 100,
            "type": "string"
          },
          "freeText7": {
            "x-ms-summary": "Free text field #7",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "maxLength": 100,
            "type": "string"
          },
          "freeText8": {
            "x-ms-summary": "Free text field #8",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "maxLength": 100,
            "type": "string"
          },
          "freeText9": {
            "x-ms-summary": "Free text field #9",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "maxLength": 100,
            "type": "string"
          },
          "freeText10": {
            "x-ms-summary": "Free text field #10",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "maxLength": 100,
            "type": "string"
          },
          "freeText11": {
            "x-ms-summary": "Free text field #11",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "maxLength": 100,
            "type": "string"
          },
          "freeText12": {
            "x-ms-summary": "Free text field #12",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "maxLength": 100,
            "type": "string"
          },
          "freeText13": {
            "x-ms-summary": "Free text field #13",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "maxLength": 100,
            "type": "string"
          },
          "freeText14": {
            "x-ms-summary": "Free text field #14",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "maxLength": 100,
            "type": "string"
          },
          "freeText15": {
            "x-ms-summary": "Free text field #15",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "maxLength": 100,
            "type": "string"
          },
          "freeText16": {
            "x-ms-summary": "Free text field #16",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "maxLength": 100,
            "type": "string"
          },
          "freeText17": {
            "x-ms-summary": "Free text field #17",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "maxLength": 100,
            "type": "string"
          },
          "freeText18": {
            "x-ms-summary": "Free text field #18",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "maxLength": 100,
            "type": "string"
          },
          "freeText19": {
            "x-ms-summary": "Free text field #19",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "maxLength": 100,
            "type": "string"
          },
          "freeText20": {
            "x-ms-summary": "Free text field #20",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "maxLength": 100,
            "type": "string"
          },
          "freeDecimal1": {
            "x-ms-summary": "Free decimal field #1",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "format": "double",
            "type": "number"
          },
          "freeDecimal2": {
            "x-ms-summary": "Free decimal field #2",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "format": "double",
            "type": "number"
          },
          "freeDecimal3": {
            "x-ms-summary": "Free decimal field #3",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "format": "double",
            "type": "number"
          },
          "freeDecimal4": {
            "x-ms-summary": "Free decimal field #4",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "format": "double",
            "type": "number"
          },
          "freeDecimal5": {
            "x-ms-summary": "Free decimal field #5",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "format": "double",
            "type": "number"
          },
          "freeDate1": {
            "x-ms-summary": "Free decimal field #1",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "format": "date-time",
            "type": "string"
          },
          "freeDate2": {
            "x-ms-summary": "Free decimal field #2",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "format": "date-time",
            "type": "string"
          },
          "freeDate3": {
            "x-ms-summary": "Free decimal field #3",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "format": "date-time",
            "type": "string"
          },
          "freeDate4": {
            "x-ms-summary": "Free decimal field #4",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "format": "date-time",
            "type": "string"
          },
          "freeDate5": {
            "x-ms-summary": "Free decimal field #5",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "format": "date-time",
            "type": "string"
          },
          "freeBit1": {
            "x-ms-summary": "Free boolean field #1",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "type": "boolean"
          },
          "freeBit2": {
            "x-ms-summary": "Free boolean field #2",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "type": "boolean"
          },
          "freeBit3": {
            "x-ms-summary": "Free boolean field #3",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "type": "boolean"
          },
          "freeBit4": {
            "x-ms-summary": "Free boolean field #4",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "type": "boolean"
          },
          "freeBit5": {
            "x-ms-summary": "Free boolean field #5",
            "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
            "type": "boolean"
          }
        },
        "example": {
          "resourceNo": "string",
          "sourceApp": "string",
          "sourceType": "string",
          "resourceType": "string",
          "resourceTypeId": 0,
          "resourceName": "string",
          "displayName": "string",
          "department": "string",
          "email": "string",
          "phone": "string",
          "mobilePhone": "string",
          "replacementResource": true,
          "fieldServiceEmail": "string",
          "personalEmail": "string",
          "gpsTrackingResourceNo": "string",
          "homeAddress": "string",
          "homeAddressGeoLong": 0,
          "homeAddressGeoLat": 0,
          "homePhone": "string",
          "homeEmail": "string",
          "homeStreet": "string",
          "homeStreetNo": "string",
          "homePostcode": "string",
          "homeCity": "string",
          "homeCounty": "string",
          "homeState": "string",
          "homeCountry": "string",
          "homeRegion": "string",
          "teamCode": "string",
          "teamName": "string",
          "teamType": "string",
          "teamSort": 0,
          "teamMemberType": "string",
          "teamMemberSort": 0,
          "doNotShow": true,
          "inServiceFrom": "string",
          "inServiceTill": "string",
          "exchangeIntegrationEnabled": true,
          "url1": "string",
          "urlDescription1": "string",
          "url2": "string",
          "urlDescription2": "string",
          "url3": "string",
          "urlDescription3": "string",
          "bulkPlanning": true,
          "bulkCapacity": 0,
          "resourceGpsTrackingEnabled": true,
          "pin": "string",
          "freeText1": "string",
          "freeText2": "string",
          "freeText3": "string",
          "freeText4": "string",
          "freeText5": "string",
          "freeText6": "string",
          "freeText7": "string",
          "freeText8": "string",
          "freeText9": "string",
          "freeText10": "string",
          "freeText11": "string",
          "freeText12": "string",
          "freeText13": "string",
          "freeText14": "string",
          "freeText15": "string",
          "freeText16": "string",
          "freeText17": "string",
          "freeText18": "string",
          "freeText19": "string",
          "freeText20": "string",
          "freeDecimal1": 0,
          "freeDecimal2": 0,
          "freeDecimal3": 0,
          "freeDecimal4": 0,
          "freeDecimal5": 0,
          "freeDate1": "string",
          "freeDate2": "string",
          "freeDate3": "string",
          "freeDate4": "string",
          "freeDate5": "string",
          "freeBit1": true,
          "freeBit2": true,
          "freeBit3": true,
          "freeBit4": true,
          "freeBit5": true
        }
      }
    },
    "resourceCalendar": {
      "type": "object",
      "properties": {
        "resourceNo": {
          "x-ms-summary": "Resource no.",
          "maxLength": 50,
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetResources",
            "value-path": "resourceNo",
            "value-title": "displayName"
          }
        },
        "calendarCode": {
          "x-ms-summary": "Calendar code",
          "maxLength": 255,
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetCalendars",
            "value-path": "code",
            "value-title": "name"
          }
        },
        "startDate": {
          "x-ms-summary": "Start date",
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "x-ms-summary": "End date",
          "format": "date-time",
          "type": "string"
        }
      },
      "example": {
        "code": "string",
        "resourceNo": "string",
        "calendarCode": "string",
        "startDate": "string",
        "endDate": "string"
      }
    },
    "resourceCapacity": {
      "type": "object",
      "properties": {
        "resourceNo": {
          "x-ms-summary": "Resource no.",
          "maxLength": 50,
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetResources",
            "value-path": "resourceNo",
            "value-title": "displayName"
          }
        },
        "date": {
          "x-ms-summary": "Date",
          "format": "date-time",
          "type": "string"
        },
        "capacityInSeconds": {
          "x-ms-summary": "Capacity in seconds",
          "format": "int64",
          "type": "integer"
        },
        "quantity": {
          "x-ms-summary": "Quantity",
          "format": "double",
          "type": "number"
        },
        "unitOfMeasure": {
          "x-ms-summary": "Unit of measure",
          "maxLength": 20,
          "type": "string"
        },
        "unitOfMeasureConversion": {
          "x-ms-summary": "Unit of measure conversion",
          "format": "double",
          "type": "number"
        }
      },
      "example": {
        "resourceNo": "string",
        "date": "string",
        "capacityInSeconds": 0,
        "quantity": 0,
        "unitOfMeasure": "string",
        "unitOfMeasureConversion": 0
      }
    },
    "resourceFilterValue": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "description": "A discriminator that describes the type of entity that this record represents.",
          "type": "string"
        },
        "resourceNo": {
          "x-ms-summary": "Resource no.",
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetResources",
            "value-path": "resourceNo",
            "value-title": "displayName"
          }
        },
        "filterGroup": {
          "x-ms-summary": "Filter group",
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetFilterGroups",
            "value-path": "Label",
            "value-title": "Label"
          }
        },
        "filterValue": {
          "x-ms-summary": "Filter value",
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetFilterValues",
            "value-path": "Value",
            "value-title": "Value"
          }
        },
        "transferToTemp": {
          "x-ms-summary": "Transfer to temp",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "resourceNo": "string",
        "filterGroup": "string",
        "filterValue": "string"
      }
    },
    "resourceGpsTracking": {
      "type": "object",
      "properties": {
        "resourceNo": {
          "x-ms-summary": "Resource no.",
          "maxLength": 50,
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetResources",
            "value-path": "resourceNo",
            "value-title": "displayName"
          }
        },
        "gpsTrackingResourceNo": {
          "x-ms-summary": "GPS tracking resource no.",
          "maxLength": 50,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "latitude": {
          "x-ms-summary": "Latitude",
          "description": "The latitude of this resource.",
          "format": "double",
          "type": "number"
        },
        "longitude": {
          "x-ms-summary": "Longitude",
          "description": "The longitude of this resource.",
          "format": "double",
          "type": "number"
        },
        "speed": {
          "x-ms-summary": "Speed",
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "date": {
          "x-ms-summary": "Date",
          "format": "date-time",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "rowId": {
          "x-ms-summary": "Row id",
          "maxLength": 100,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "power": {
          "x-ms-summary": "Power",
          "maxLength": 50,
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      },
      "example": {
        "resourceNo": "string",
        "gpsTrackingResourceNo": "string",
        "latitude": 0,
        "longitude": 0,
        "speed": 0,
        "date": "string",
        "rowId": "string",
        "power": "string"
      }
    },
    "resourcetypelist": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "x-ms-summary": "id",
            "maxLength": 100,
            "type": "string"
          },
          "name": {
            "x-ms-summary": "name",
            "maxLength": 100,
            "type": "string"
          },
          "displayName": {
            "x-ms-summary": "Display name",
            "maxLength": 100,
            "type": "string"
          }
        },
        "example": {}
      }
    },
    "resourceUri": {
      "type": "object",
      "properties": {
        "resourceNo": {
          "x-ms-summary": "Resource no.",
          "maxLength": 50,
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetResources",
            "value-path": "resourceNo",
            "value-title": "displayName"
          }
        },
        "uri": {
          "x-ms-summary": "URI",
          "maxLength": 1000,
          "type": "string"
        },
        "description": {
          "x-ms-summary": "Description",
          "maxLength": 255,
          "type": "string"
        }
      },
      "example": {
        "resourceNo": "string",
        "uri": "string",
        "description": "string"
      }
    },
    "task": {
      "type": "object",
      "required": [
        "sourceApp",
        "sourceType",
        "jobNo",
        "taskNo",
        "description",
        "shortDescription"
      ],
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "description": "A discriminator that describes the type of entity that this record represents.",
          "maxLength": 10,
          "type": "string"
        },
        "jobNo": {
          "x-ms-summary": "Job no.",
          "description": "The unique identifier that is associated with the job.",
          "maxLength": 50,
          "type": "string"
        },
        "createJob": {
          "x-ms-summary": "Create job",
          "description": "Use this field to create a job for this task.",
          "type": "boolean"
        },
        "taskNo": {
          "x-ms-summary": "Task no.",
          "description": "The unique identifier that is associated with the task.",
          "maxLength": 50,
          "type": "string"
        },
        "taskType": {
          "x-ms-summary": "Task type",
          "format": "int32",
          "default": 0,
          "x-ms-enum-values": [
            {
              "displayName": "Planning",
              "value": 0
            },
            {
              "displayName": "Project",
              "value": 1
            }
          ],
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "shortDescription": {
          "x-ms-summary": "Short description",
          "maxLength": 50,
          "type": "string"
        },
        "description": {
          "x-ms-summary": "Description",
          "maxLength": 200,
          "type": "string"
        },
        "name": {
          "x-ms-summary": "Name",
          "maxLength": 255,
          "type": "string"
        },
        "type": {
          "x-ms-summary": "Type",
          "maxLength": 20,
          "type": "string"
        },
        "importance": {
          "x-ms-summary": "Importance",
          "format": "int32",
          "default": 0,
          "x-ms-enum-values": [
            {
              "displayName": "Medium",
              "value": 0
            },
            {
              "displayName": "High",
              "value": 1
            },
            {
              "displayName": "Low",
              "value": 2
            }
          ],
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "timeMarker": {
          "type": "string",
          "x-ms-summary": "Time Marker",
          "description": "Specifies the color of the horizontal bar at the bottom of the appointment in the planning board. Used to represent any kind of status or property that applies to your business.",
          "x-ms-dynamic-values": {
            "operationId": "GetTimeMarkers",
            "value-path": "name",
            "value-title": "name"
          }
        },
        "category": {
          "type": "string",
          "x-ms-summary": "Category",
          "description": "Specifies the background color of the appointment in the planning board. Used to represent any kind of status or property that applies to your business.",
          "x-ms-dynamic-values": {
            "operationId": "GetCategories",
            "value-path": "name",
            "value-title": "name"
          }
        },
        "pin": {
          "x-ms-summary": "Pin",
          "maxLength": 100,
          "type": "string"
        },
        "serviceNo": {
          "x-ms-summary": "Service no.",
          "maxLength": 50,
          "type": "string"
        },
        "serviceGroup": {
          "x-ms-summary": "Service group",
          "maxLength": 20,
          "type": "string"
        },
        "serviceClass": {
          "x-ms-summary": "Service class",
          "maxLength": 20,
          "type": "string"
        },
        "serviceSerialNo": {
          "x-ms-summary": "Service serial no.",
          "maxLength": 50,
          "type": "string"
        },
        "serviceName": {
          "x-ms-summary": "Service name",
          "maxLength": 50,
          "type": "string"
        },
        "irisFault": {
          "x-ms-summary": "IRIS fault",
          "maxLength": 10,
          "type": "string"
        },
        "irisSymptom": {
          "x-ms-summary": "IRIS symptom",
          "maxLength": 10,
          "type": "string"
        },
        "irisArea": {
          "x-ms-summary": "IRIS area",
          "maxLength": 10,
          "type": "string"
        },
        "irisReason": {
          "x-ms-summary": "IRIS reason",
          "maxLength": 10,
          "type": "string"
        },
        "irisResolution": {
          "x-ms-summary": "IRIS resolution",
          "maxLength": 10,
          "type": "string"
        },
        "skill1": {
          "x-ms-summary": "Skill #1",
          "maxLength": 10,
          "type": "string"
        },
        "skill2": {
          "x-ms-summary": "Skill #2",
          "maxLength": 10,
          "type": "string"
        },
        "skill3": {
          "x-ms-summary": "Skill #3",
          "maxLength": 10,
          "type": "string"
        },
        "contractNo": {
          "x-ms-summary": "Contract number",
          "maxLength": 20,
          "type": "string"
        },
        "contractType": {
          "x-ms-summary": "Contract type",
          "maxLength": 30,
          "type": "string"
        },
        "contractDescription": {
          "x-ms-summary": "Contract description",
          "type": "string"
        },
        "contractStartDate": {
          "x-ms-summary": "Contract start date",
          "format": "date-time",
          "type": "string"
        },
        "contractEndDate": {
          "x-ms-summary": "Contract end date",
          "format": "date-time",
          "type": "string"
        },
        "partsWarrantyStartDate": {
          "x-ms-summary": "Parts warranty start date",
          "format": "date-time",
          "type": "string"
        },
        "partsWarrantyEndDate": {
          "x-ms-summary": "Parts warranty end date",
          "format": "date-time",
          "type": "string"
        },
        "laborWarrantyStartDate": {
          "x-ms-summary": "Labor warranty start date",
          "format": "date-time",
          "type": "string"
        },
        "laborWarrantyEndDate": {
          "x-ms-summary": "Labor warranty end date",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "x-ms-summary": "Status",
          "maxLength": 20,
          "type": "string"
        },
        "expectedResponseDateTime": {
          "x-ms-summary": "Expected response date",
          "format": "date-time",
          "type": "string"
        },
        "actualResponseDateTime": {
          "x-ms-summary": "Actual response date",
          "format": "date-time",
          "type": "string"
        },
        "requestedStartDate": {
          "x-ms-summary": "Requested start date",
          "format": "date-time",
          "type": "string"
        },
        "requestedEndDate": {
          "x-ms-summary": "Requested end date",
          "format": "date-time",
          "type": "string"
        },
        "requestedStartTime": {
          "x-ms-summary": "Requested start time",
          "type": "string"
        },
        "requestedEndTime": {
          "x-ms-summary": "Requested end time",
          "type": "string"
        },
        "confirmedStartDate": {
          "x-ms-summary": "Confirmed start date",
          "format": "date-time",
          "type": "string"
        },
        "confirmedEndDate": {
          "x-ms-summary": "Confirmed end date",
          "format": "date-time",
          "type": "string"
        },
        "actualStartDate": {
          "x-ms-summary": "Actual start date",
          "format": "date-time",
          "type": "string"
        },
        "actualEndDate": {
          "x-ms-summary": "Actual end date",
          "format": "date-time",
          "type": "string"
        },
        "locationDescription": {
          "x-ms-summary": "Location description",
          "type": "string"
        },
        "duration": {
          "x-ms-summary": "Duration",
          "type": "string"
        },
        "durationInSeconds": {
          "x-ms-summary": "Duration in seconds",
          "format": "int64",
          "type": "integer"
        },
        "subject": {
          "x-ms-summary": "Subject",
          "type": "string"
        },
        "body": {
          "x-ms-summary": "Body",
          "type": "string"
        },
        "infiniteTask": {
          "x-ms-summary": "Is infinite task",
          "description": "Setting this to true will pin this task on the open tasks grid.",
          "type": "boolean"
        },
        "taskOpenAsOf": {
          "x-ms-summary": "Open from date",
          "format": "date-time",
          "type": "string"
        },
        "taskOpenTill": {
          "x-ms-summary": "Open until date",
          "format": "date-time",
          "type": "string"
        },
        "requiredTotalDuration": {
          "x-ms-summary": "Required total duration",
          "type": "string"
        },
        "requiredNoResources": {
          "x-ms-summary": "Required number of resources",
          "format": "int32",
          "type": "integer"
        },
        "appointmentEarliestAllowed": {
          "x-ms-summary": "Earliest allowed time",
          "format": "date-time",
          "type": "string"
        },
        "appointmentLatestAllowed": {
          "x-ms-summary": "Latest allowed time",
          "format": "date-time",
          "type": "string"
        },
        "freeText1": {
          "x-ms-summary": "Free text field #1",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText2": {
          "x-ms-summary": "Free text field #2",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText3": {
          "x-ms-summary": "Free text field #3",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText4": {
          "x-ms-summary": "Free text field #4",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText5": {
          "x-ms-summary": "Free text field #5",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText6": {
          "x-ms-summary": "Free text field #6",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText7": {
          "x-ms-summary": "Free text field #7",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText8": {
          "x-ms-summary": "Free text field #8",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText9": {
          "x-ms-summary": "Free text field #9",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText10": {
          "x-ms-summary": "Free text field #10",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText11": {
          "x-ms-summary": "Free text field #11",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText12": {
          "x-ms-summary": "Free text field #12",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText13": {
          "x-ms-summary": "Free text field #13",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText14": {
          "x-ms-summary": "Free text field #14",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText15": {
          "x-ms-summary": "Free text field #15",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText16": {
          "x-ms-summary": "Free text field #16",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText17": {
          "x-ms-summary": "Free text field #17",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText18": {
          "x-ms-summary": "Free text field #18",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText19": {
          "x-ms-summary": "Free text field #19",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeText20": {
          "x-ms-summary": "Free text field #20",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "maxLength": 100,
          "type": "string"
        },
        "freeDecimal1": {
          "x-ms-summary": "Free decimal field #1",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "double",
          "type": "number"
        },
        "freeDecimal2": {
          "x-ms-summary": "Free decimal field #2",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "double",
          "type": "number"
        },
        "freeDecimal3": {
          "x-ms-summary": "Free decimal field #3",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "double",
          "type": "number"
        },
        "freeDecimal4": {
          "x-ms-summary": "Free decimal field #4",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "double",
          "type": "number"
        },
        "freeDecimal5": {
          "x-ms-summary": "Free decimal field #5",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "double",
          "type": "number"
        },
        "freeDate1": {
          "x-ms-summary": "Free date field #1",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "date-time",
          "type": "string"
        },
        "freeDate2": {
          "x-ms-summary": "Free date field #2",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "date-time",
          "type": "string"
        },
        "freeDate3": {
          "x-ms-summary": "Free date field #3",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "date-time",
          "type": "string"
        },
        "freeDate4": {
          "x-ms-summary": "Free date field #4",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "date-time",
          "type": "string"
        },
        "freeDate5": {
          "x-ms-summary": "Free date field #5",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "format": "date-time",
          "type": "string"
        },
        "freeBit1": {
          "x-ms-summary": "Free boolean field #1",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "type": "boolean"
        },
        "freeBit2": {
          "x-ms-summary": "Free boolean field #2",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "type": "boolean"
        },
        "freeBit3": {
          "x-ms-summary": "Free boolean field #3",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "type": "boolean"
        },
        "freeBit4": {
          "x-ms-summary": "Free boolean field #4",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "type": "boolean"
        },
        "freeBit5": {
          "x-ms-summary": "Free boolean field #5",
          "description": "A field that is unmapped by default that can be used at your discretion. Use captions to change the title of this field.",
          "type": "boolean"
        },
        "url1": {
          "x-ms-summary": "URL 1",
          "maxLength": 1000,
          "type": "string"
        },
        "urlDescription1": {
          "x-ms-summary": "URL 1 description",
          "maxLength": 255,
          "type": "string"
        },
        "url2": {
          "x-ms-summary": "URL 2",
          "maxLength": 1000,
          "type": "string"
        },
        "urlDescription2": {
          "x-ms-summary": "URL 2 description",
          "maxLength": 255,
          "type": "string"
        },
        "url3": {
          "x-ms-summary": "URL 3",
          "maxLength": 1000,
          "type": "string"
        },
        "urlDescription3": {
          "x-ms-summary": "URL 3 description",
          "maxLength": 255,
          "type": "string"
        },
        "certificateNo": {
          "x-ms-summary": "Certificate no.",
          "type": "string"
        },
        "requiredTotalDurationInSeconds": {
          "x-ms-summary": "Required total duration (in seconds)",
          "format": "int64",
          "type": "integer"
        },
        "doNotCountAppointmentResource": {
          "x-ms-summary": "Do not count appointment resources",
          "type": "boolean"
        },
        "isComplete": {
          "x-ms-summary": "Is complete",
          "type": "boolean"
        },
        "planningUOM": {
          "x-ms-summary": "Planning unit of measure",
          "maxLength": 20,
          "type": "string"
        },
        "planningQty": {
          "x-ms-summary": "Planning quantity",
          "format": "double",
          "type": "number"
        },
        "useFixPlanningQty": {
          "x-ms-summary": "Use fixed planning quantity",
          "type": "boolean"
        },
        "roundToUOM": {
          "x-ms-summary": "Round to unit of measure",
          "type": "boolean"
        },
        "appointmentTemplate": {
          "x-ms-summary": "Appointment template",
          "maxLength": 100,
          "type": "string"
        },
        "bulkPlanningQty": {
          "x-ms-summary": "Bulk planning quantity",
          "format": "double",
          "type": "number"
        },
        "calendarCode": {
          "x-ms-summary": "Calendar code",
          "maxLength": 255,
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetCalendars",
            "value-path": "code",
            "value-title": "name"
          }
        },
        "startDate": {
          "x-ms-summary": "Gantt: Start date",
          "format": "date-time",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "endDate": {
          "x-ms-summary": "Gantt: End date",
          "format": "date-time",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "percentDone": {
          "x-ms-summary": "Gantt: Percentage done",
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "schedulingMode": {
          "x-ms-summary": "Gantt: Scheduling mode",
          "format": "int32",
          "default": 0,
          "x-ms-visibility": "advanced",
          "x-ms-enum-values": [
            {
              "displayName": "Normal",
              "value": 0
            },
            {
              "displayName": "Fixed duration",
              "value": 1
            },
            {
              "displayName": "Effort-driven",
              "value": 2
            },
            {
              "displayName": "Dynamic assignment",
              "value": 3
            }
          ],
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "baseLineStartDate": {
          "x-ms-summary": "Gantt: Baseline start date",
          "format": "date-time",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "baseLineEndDate": {
          "x-ms-summary": "Gantt: Baseline end date",
          "format": "date-time",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "baseLinePercentDone": {
          "x-ms-summary": "Gantt: Baseline percent done",
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "deadLine": {
          "x-ms-summary": "Gantt: Deadline",
          "format": "date-time",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "index": {
          "x-ms-summary": "Gantt: Index",
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "constraintType": {
          "x-ms-summary": "Gantt: Constraint type",
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "constraintDatetime": {
          "x-ms-summary": "Gantt: Constraint datetime",
          "format": "date-time",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "parentTaskNo": {
          "x-ms-summary": "Gantt: Parent task no.",
          "maxLength": 50,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "predecessorTaskNo": {
          "x-ms-summary": "Gantt: Predecessor task no.",
          "maxLength": 50,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "predecessorLag": {
          "x-ms-summary": "Gantt: Predecessor lag",
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "manuallyScheduled": {
          "x-ms-summary": "Gantt: Manually scheduled",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "note": {
          "x-ms-summary": "Gantt: Note",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "overRuleGanttPlanning": {
          "x-ms-summary": "Gantt: Overrule Gantt planning",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "ignoreCalendars": {
          "x-ms-summary": "Ignore calendars",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "containerName": {
          "x-ms-summary": "Container name",
          "maxLength": 255,
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "containerIndex": {
          "x-ms-summary": "Container index",
          "format": "int32",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "checkAppointments": {
          "x-ms-summary": "Check appointments",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back-office",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "jobNo": "string",
        "taskNo": "string",
        "taskType": 0,
        "shortDescription": "string",
        "description": "string",
        "name": "string",
        "type": "string",
        "category": "string",
        "timeMarker": "string",
        "pin": "string",
        "serviceNo": "string",
        "serviceGroup": "string",
        "serviceClass": "string",
        "serviceSerialNo": "string",
        "serviceName": "string",
        "irisFault": "string",
        "irisSymptom": "string",
        "irisArea": "string",
        "irisReason": "string",
        "irisResolution": "string",
        "skill1": "string",
        "skill2": "string",
        "skill3": "string",
        "contractNo": "string",
        "contractType": "string",
        "contractDescription": "string",
        "contractStartDate": "string",
        "contractEndDate": "string",
        "partsWarrantyStartDate": "string",
        "partsWarrantyEndDate": "string",
        "laborWarrantyStartDate": "string",
        "laborWarrantyEndDate": "string",
        "importance": 0,
        "status": "string",
        "expectedResponseDateTime": "string",
        "actualResponseDateTime": "string",
        "requestedStartDate": "string",
        "requestedEndDate": "string",
        "requestedStartTime": {
          "ticks": 0,
          "days": 0,
          "hours": 0,
          "milliseconds": 0,
          "minutes": 0,
          "seconds": 0,
          "totalDays": 0,
          "totalHours": 0,
          "totalMilliseconds": 0,
          "totalMinutes": 0,
          "totalSeconds": 0
        },
        "requestedEndTime": {
          "ticks": 0,
          "days": 0,
          "hours": 0,
          "milliseconds": 0,
          "minutes": 0,
          "seconds": 0,
          "totalDays": 0,
          "totalHours": 0,
          "totalMilliseconds": 0,
          "totalMinutes": 0,
          "totalSeconds": 0
        },
        "confirmedStartDate": "string",
        "confirmedEndDate": "string",
        "actualStartDate": "string",
        "actualEndDate": "string",
        "locationDescription": "string",
        "duration": {
          "ticks": 0,
          "days": 0,
          "hours": 0,
          "milliseconds": 0,
          "minutes": 0,
          "seconds": 0,
          "totalDays": 0,
          "totalHours": 0,
          "totalMilliseconds": 0,
          "totalMinutes": 0,
          "totalSeconds": 0
        },
        "durationInSeconds": 0,
        "subject": "string",
        "body": "string",
        "infiniteTask": true,
        "taskOpenAsOf": "string",
        "taskOpenTill": "string",
        "requiredTotalDuration": {
          "ticks": 0,
          "days": 0,
          "hours": 0,
          "milliseconds": 0,
          "minutes": 0,
          "seconds": 0,
          "totalDays": 0,
          "totalHours": 0,
          "totalMilliseconds": 0,
          "totalMinutes": 0,
          "totalSeconds": 0
        },
        "requiredNoResources": 0,
        "appointmentEarliestAllowed": "string",
        "appointmentLatestAllowed": "string",
        "freeText1": "string",
        "freeText2": "string",
        "freeText3": "string",
        "freeText4": "string",
        "freeText5": "string",
        "freeText6": "string",
        "freeText7": "string",
        "freeText8": "string",
        "freeText9": "string",
        "freeText10": "string",
        "freeText11": "string",
        "freeText12": "string",
        "freeText13": "string",
        "freeText14": "string",
        "freeText15": "string",
        "freeText16": "string",
        "freeText17": "string",
        "freeText18": "string",
        "freeText19": "string",
        "freeText20": "string",
        "freeDecimal1": 0,
        "freeDecimal2": 0,
        "freeDecimal3": 0,
        "freeDecimal4": 0,
        "freeDecimal5": 0,
        "freeDate1": "string",
        "freeDate2": "string",
        "freeDate3": "string",
        "freeDate4": "string",
        "freeDate5": "string",
        "freeBit1": true,
        "freeBit2": true,
        "freeBit3": true,
        "freeBit4": true,
        "freeBit5": true,
        "url1": "string",
        "urlDescription1": "string",
        "url2": "string",
        "urlDescription2": "string",
        "url3": "string",
        "urlDescription3": "string",
        "certificateNo": "string",
        "requiredTotalDurationInSeconds": 0,
        "doNotCountAppointmentResource": true,
        "isComplete": true,
        "planningUOM": "string",
        "planningQty": 0,
        "useFixPlanningQty": true,
        "roundToUOM": true,
        "appointmentTemplate": "string",
        "bulkPlanningQty": 0,
        "startDate": "string",
        "endDate": "string",
        "percentDone": 0,
        "schedulingMode": 0,
        "baseLineStartDate": "string",
        "baseLineEndDate": "string",
        "baseLinePercentDone": 0,
        "deadLine": "string",
        "index": 0,
        "constraintType": 0,
        "constraintDatetime": "string",
        "parentTaskNo": "string",
        "calendarCode": "string",
        "predecessorTaskNo": "string",
        "predecessorLag": 0,
        "manuallyScheduled": true,
        "note": "string",
        "overRuleGanttPlanning": true,
        "ignoreCalendars": true,
        "containerName": "string",
        "containerIndex": 0,
        "checkAppointments": true
      }
    },
    "task-delete": {
      "type": "object",
      "required": [
        "sourceApp",
        "sourceType",
        "jobNo",
        "taskNo"
      ],
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "description": "A discriminator that describes the type of entity that this record represents.",
          "maxLength": 10,
          "type": "string"
        },
        "jobNo": {
          "x-ms-summary": "Job no.",
          "description": "The unique identifier that is associated with the job.",
          "maxLength": 50,
          "type": "string"
        },
        "taskNo": {
          "x-ms-summary": "Task no.",
          "description": "The unique identifier that is associated with the task.",
          "maxLength": 50,
          "type": "string"
        },
        "checkAppointments": {
          "x-ms-summary": "Check appointments",
          "type": "boolean"
        }
      }
    },
    "taskContainer": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "description": "A discriminator that describes the type of entity that this record represents.",
          "maxLength": 10,
          "type": "string"
        },
        "jobNo": {
          "x-ms-summary": "Job no.",
          "description": "The unique identifier that is associated with the job.",
          "maxLength": 50,
          "type": "string"
        },
        "taskNo": {
          "x-ms-summary": "Task no.",
          "description": "The unique identifier that is associated with the task.",
          "maxLength": 50,
          "type": "string"
        },
        "name": {
          "x-ms-summary": "name",
          "maxLength": 255,
          "type": "string"
        },
        "index": {
          "x-ms-summary": "Index",
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "jobNo": "string",
        "taskNo": "string",
        "name": "string",
        "index": 0
      }
    },
    "taskFilterValue": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "description": "A discriminator that describes the type of entity that this record represents.",
          "maxLength": 10,
          "type": "string"
        },
        "jobNo": {
          "x-ms-summary": "Job no.",
          "description": "The unique identifier that is associated with the job.",
          "maxLength": 50,
          "type": "string"
        },
        "taskNo": {
          "x-ms-summary": "Task no.",
          "description": "The unique identifier that is associated with the task.",
          "maxLength": 50,
          "type": "string"
        },
        "filterGroup": {
          "x-ms-summary": "Filter group",
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetFilterGroups",
            "value-path": "Label",
            "value-title": "Label"
          }
        },
        "filterValue": {
          "x-ms-summary": "Filter value",
          "type": "string",
          "x-ms-dynamic-values": {
            "operationId": "GetFilterValues",
            "value-path": "Value",
            "value-title": "Value"
          }
        },
        "transferToTemp": {
          "x-ms-summary": "Transfer to temp",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "jobNo": "string",
        "taskNo": "string",
        "filterGroup": "string",
        "filterValue": "string"
      }
    },
    "taskLocked": {
      "type": "object",
      "properties": {
        "sourceApp": {
          "x-ms-summary": "Source application",
          "description": "A unique identifier that lets Dime.Scheduler know to which back-office system this record belongs to.",
          "maxLength": 30,
          "type": "string"
        },
        "sourceType": {
          "x-ms-summary": "Source type",
          "description": "A discriminator that describes the type of entity that this record represents.",
          "maxLength": 10,
          "type": "string"
        },
        "jobNo": {
          "x-ms-summary": "Job no.",
          "description": "The unique identifier that is associated with the job.",
          "maxLength": 50,
          "type": "string"
        },
        "taskNo": {
          "x-ms-summary": "Task no.",
          "description": "The unique identifier that is associated with the task.",
          "maxLength": 50,
          "type": "string"
        },
        "locked": {
          "x-ms-summary": "Locked",
          "type": "boolean"
        },
        "sentFromBackOffice": {
          "x-ms-summary": "Sent from back-office",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        }
      },
      "example": {
        "sourceApp": "string",
        "sourceType": "string",
        "jobNo": "string",
        "taskNo": "string",
        "locked": true
      }
    },
    "timeMarker": {
      "type": "object",
      "properties": {
        "name": {
          "x-ms-summary": "Name",
          "maxLength": 100,
          "type": "string"
        },
        "color": {
          "x-ms-summary": "Color",
          "maxLength": 7,
          "type": "string"
        }
      },
      "example": {
        "name": "Underway for delivery",
        "color": "#99bj2z"
      }
    },
    "timemarkerlist": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "x-ms-summary": "id",
            "maxLength": 100,
            "type": "string"
          },
          "name": {
            "x-ms-summary": "Name",
            "maxLength": 100,
            "type": "string"
          },
          "color": {
            "x-ms-summary": "Color",
            "maxLength": 7,
            "type": "string"
          }
        }
      },
      "example": {
        "name": "OOO",
        "displayName": "Out of office",
        "color": "#6e62b5"
      }
    },
    "timeSpan": {
      "type": "object",
      "properties": {
        "ticks": {
          "format": "int64",
          "type": "integer"
        },
        "days": {
          "format": "int32",
          "type": "integer"
        },
        "hours": {
          "format": "int32",
          "type": "integer"
        },
        "milliseconds": {
          "format": "int32",
          "type": "integer"
        },
        "minutes": {
          "format": "int32",
          "type": "integer"
        },
        "seconds": {
          "format": "int32",
          "type": "integer"
        },
        "totalDays": {
          "format": "double",
          "type": "number"
        },
        "totalHours": {
          "format": "double",
          "type": "number"
        },
        "totalMilliseconds": {
          "format": "double",
          "type": "number"
        },
        "totalMinutes": {
          "format": "double",
          "type": "number"
        },
        "totalSeconds": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "SendErrorResponseBody": {
      "type": "string"
    },
    "SendSuccessResponseBody": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "Successful",
          "x-ms-summary": "Successful",
          "description": "Successful",
          "x-ms-visibility": "advanced"
        },
        "message": {
          "type": "string",
          "title": "Response message",
          "x-ms-summary": "Response message",
          "description": "Response message.",
          "x-ms-visibility": "advanced"
        },
        "status": {
          "type": "number",
          "title": "Status code",
          "x-ms-summary": "Status code",
          "description": "The status code",
          "x-ms-visibility": "advanced"
        },
        "phrase": {
          "type": "string",
          "title": "Status code phrase",
          "x-ms-summary": "Status code phrase",
          "description": "Status code phrase",
          "x-ms-visibility": "advanced"
        }
      }
    }
  },
  "parameters": {},
  "responses": {
    "200": {
      "description": "Response to successful sending record",
      "x-ms-summary": "Success response",
      "schema": {
        "$ref": "#/definitions/SendSuccessResponseBody"
      }
    },
    "400": {
      "description": "The request was invalid.",
      "x-ms-summary": "The request was invalid.",
      "schema": {
        "$ref": "#/definitions/SendErrorResponseBody"
      }
    },
    "500": {
      "description": "An error occurred on the server.",
      "x-ms-summary": "An error occurred on the server.",
      "schema": {
        "$ref": "#/definitions/SendErrorResponseBody"
      }
    },
    "default": {
      "description": "Response to successful sending record",
      "x-ms-summary": "Success response"
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "name": "X-API-KEY",
      "in": "header"
    }
  },
  "security": [],
  "tags": []
}